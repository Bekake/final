{"ast":null,"code":"import { createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, toDisplayString as _toDisplayString, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-4cebd208\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h1\", null, \"Boshladim\", -1 /* HOISTED */));\nconst _hoisted_2 = [\"src\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(_Fragment, null, [_hoisted_1, _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.cityname = $event)\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.cityname]]), _createElementVNode(\"p\", null, _toDisplayString($data.cityname), 1 /* TEXT */), _createElementVNode(\"button\", {\n    onClick: _cache[1] || (_cache[1] = (...args) => $options.getdata && $options.getdata(...args))\n  }, [_createElementVNode(\"img\", {\n    src: $data.search,\n    alt: \"search\"\n  }, null, 8 /* PROPS */, _hoisted_2)]), _createElementVNode(\"p\", null, _toDisplayString($data.wd) + \" -\" + _toDisplayString($data.hm), 1 /* TEXT */)], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["_createElementVNode","_createElementBlock","_Fragment","_hoisted_1","type","_cache","$event","$data","cityname","_toDisplayString","onClick","args","$options","getdata","src","search","alt","_hoisted_2","wd","hm"],"sources":["C:\\Users\\Windows 11\\All\\real\\vuejob\\src\\views\\AboutView.vue"],"sourcesContent":["<template>\n<h1>Boshladim</h1>\n<input type=\"text\" v-model=\"cityname\">\n<p>{{ cityname }}</p>\n<button @click=\"getdata\"><img :src=\"search\" alt=\"search\"></button>\n<p>{{ wd }} -{{ hm }}</p>\n</template>\n<script>\nimport { DateTime } from \"luxon\";\nexport default {\n  data(){\n    return {\n      cityname: '',\n      cloudy : require('@/assets/cloudy.png'),\n      search : require('@/assets/search.png'),\n      rain : require('@/assets/rain.png'),\n      sunny : require('@/assets/sunny.png'),\n      thunder : require('@/assets/thunder.png'),\n      hm: \"\",\n      wd: \"\",\n\n    }\n\n  },\n  // mounted(){\n  //   this.getdata()\n  // },\n  methods: {\n    gettime(timezone){\n      if (timezone) {\n        \n        const now = DateTime.now().setZone(timezone);\n        const dateFormatted = now.toFormat(\"d-LLLL\"); \n        const timeFormatted = now.toFormat(\"HH:mm\");\n        const dayofweek = now.toFormat('EEEE');\n        const hkun = this.hkuns(dayofweek)\n        this.hm = `${timeFormatted}`;\n        this.wd = `${hkun}, ${dateFormatted}`\n      } \n      else {\n        this.time = \"Unknown city or timezone\";\n      }\n    },\n    hkuns(enday){\n    const haftakunlar = {\n      'Mon': 'Dushanba',\n      'Tue': 'Seshanba',\n      'Wed': 'Chorshanba',\n      'Thu': 'Payshanba',\n      'Fri': 'Juma',\n      'Sat': 'Shanba',\n      'Sun': 'Yakshanba'\n    };\n    return haftakunlar.enday;\n    },\n    async getdata() {\n      try {\n        let cname;\n        if (this.cityname == '') {\n          cname = \"Tashkent\"\n        }\n        else{\n          cname = this.cityname\n        }\n        const response = await fetch(`https://weather.visualcrossing.com/VisualCrossingWebServices/rest/services/timeline/${cname}?unitGroup=us&key=S8GRPS82BJYVQWBERVPLSHJRA&contentType=json`)\n        const data = await response.json();\n        this.gettime(data.timezone);\n        console.log(data);\n      }\n      catch (error) {\n        console.log('City name is not found');\n      }\n      \n      \n    } \n  }\n}\n\n</script>\n<style scoped>\nimg{\n  width: 32px;\n}\n</style>"],"mappings":";;gEACAA,mBAAA,CAAkB,YAAd,WAAS;mBADb;;uBAAAC,mBAAA,CAAAC,SAAA,SACAC,UAAkB,E,gBAClBH,mBAAA,CAAsC;IAA/BI,IAAI,EAAC,MAAM;IAFlB,uBAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAE4BC,KAAA,CAAAC,QAAQ,GAAAF,MAAA;iDAARC,KAAA,CAAAC,QAAQ,E,GACpCR,mBAAA,CAAqB,WAAAS,gBAAA,CAAfF,KAAA,CAAAC,QAAQ,kBACdR,mBAAA,CAAkE;IAAzDU,OAAK,EAAAL,MAAA,QAAAA,MAAA,UAAAM,IAAA,KAAEC,QAAA,CAAAC,OAAA,IAAAD,QAAA,CAAAC,OAAA,IAAAF,IAAA,CAAO;MAAEX,mBAAA,CAAgC;IAA1Bc,GAAG,EAAEP,KAAA,CAAAQ,MAAM;IAAEC,GAAG,EAAC;0BAJhDC,UAAA,E,GAKAjB,mBAAA,CAAyB,WAAAS,gBAAA,CAAnBF,KAAA,CAAAW,EAAE,IAAG,IAAE,GAAAT,gBAAA,CAAGF,KAAA,CAAAY,EAAE,iB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}