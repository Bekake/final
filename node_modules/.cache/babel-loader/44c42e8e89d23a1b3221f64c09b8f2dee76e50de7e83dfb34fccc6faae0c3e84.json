{"ast":null,"code":"import { createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, toDisplayString as _toDisplayString, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"h1\", null, \"Boshladim\", -1 /* HOISTED */);\nconst _hoisted_2 = [\"src\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(_Fragment, null, [_hoisted_1, _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.cityname = $event)\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.cityname]]), _createElementVNode(\"img\", {\n    src: require($data.imurl),\n    alt: \"Icon\"\n  }, null, 8 /* PROPS */, _hoisted_2), _createElementVNode(\"p\", null, _toDisplayString($data.imurl), 1 /* TEXT */), _createElementVNode(\"p\", null, _toDisplayString($data.cityname), 1 /* TEXT */)], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["_createElementVNode","_createElementBlock","_Fragment","_hoisted_1","type","_cache","$event","$data","cityname","src","require","imurl","alt","_hoisted_2","_toDisplayString"],"sources":["C:\\Users\\Windows 11\\All\\real\\vuejob\\src\\views\\AboutView.vue"],"sourcesContent":["<template>\n<h1>Boshladim</h1>\n<input type=\"text\" v-model=\"cityname\">\n<img :src=\"require(imurl)\" alt=\"Icon\">\n<p>{{ imurl }}</p>\n<p>{{ cityname }}</p>\n</template>\n<script>\nexport default {\n  data(){\n    return {\n      cityname: '',\n      imurl : '@/assets/my-image.jpg'\n      \n    }\n\n  },\n  // mounted(){\n  //   this.getdata()\n  // },\n  methods: {\n    async getdata() {\n      \n      let cname;\n      if (this.cityname == '') {\n        cname = \"Tashkent\"\n      }\n      else{\n        cname = this.cityname\n      }\n      const response = await fetch(`https://weather.visualcrossing.com/VisualCrossingWebServices/rest/services/timeline/${cname}?unitGroup=us&key=S8GRPS82BJYVQWBERVPLSHJRA&contentType=json`)\n      const data = await response.json();\n      console.log(data);\n      \n    } \n  }\n}\n\n</script>"],"mappings":";gCACAA,mBAAA,CAAkB,YAAd,WAAS;mBADb;;uBAAAC,mBAAA,CAAAC,SAAA,SACAC,UAAkB,E,gBAClBH,mBAAA,CAAsC;IAA/BI,IAAI,EAAC,MAAM;IAFlB,uBAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAE4BC,KAAA,CAAAC,QAAQ,GAAAF,MAAA;iDAARC,KAAA,CAAAC,QAAQ,E,GACpCR,mBAAA,CAAsC;IAAhCS,GAAG,EAAEC,OAAO,CAACH,KAAA,CAAAI,KAAK;IAAGC,GAAG,EAAC;0BAH/BC,UAAA,GAIAb,mBAAA,CAAkB,WAAAc,gBAAA,CAAZP,KAAA,CAAAI,KAAK,kBACXX,mBAAA,CAAqB,WAAAc,gBAAA,CAAfP,KAAA,CAAAC,QAAQ,iB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}