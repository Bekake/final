{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nexport default {\n  data() {\n    return {\n      mytext: \"This is something for text, please enter your text here and try again later to get more information\",\n      intext: \"\",\n      myall: []\n    };\n  },\n  methods: {\n    /*\r\n    getclass(index){\r\n        let willclass;\r\n        for(let i=0;i<=this.intext.length;i++){\r\n            if(index== this.myall[i].indexnum){\r\n                willclass = this.myall[i].class\r\n            }\r\n        }\r\n        willclass = 'default'\r\n        return willclass\r\n    },*/\n    star(event) {\n      let myword = this.intext;\n      if (event.key == \"Backspace\") {\n        myword = myword.slice(0, -1);\n      } else if (event.key == \"CapsLock\" || event.key == \"Shift\" || event.key == \"Control\" || event.key == \"AltGraph\" || event.key == \"Alt\" || event.key == \"ArrowUp\") {\n        console.log(\"i don't want to change in this situation\");\n      } else {\n        myword += event.key;\n      }\n      this.intext = myword;\n      let mylength = myword.length - 1;\n      console.log(myword, mylength, myword.charAt(mylength));\n      let inputinfo = {\n        indexnum: mylength,\n        class: 'correct',\n        expectedchar: this.mytext.charAt(mylength),\n        writtenchar: myword.charAt(mylength)\n      };\n      this.myall = this.myall.filter(element => element.indexnum !== mylength);\n      this.myall = this.myall.filter(elem => elem.indexnum <= mylength);\n      if (this.mytext.charAt(mylength) !== myword.charAt(mylength)) {\n        inputinfo.class = 'incorrect';\n      }\n      this.myall.push(inputinfo);\n      console.log(this.myall[0].indexnum);\n    }\n  }\n};","map":{"version":3,"names":["data","mytext","intext","myall","methods","star","event","myword","key","slice","console","log","mylength","length","charAt","inputinfo","indexnum","class","expectedchar","writtenchar","filter","element","elem","push"],"sources":["C:\\Users\\Windows 11\\All\\real\\vuejob\\src\\views\\speed.vue"],"sourcesContent":["<template>\r\n<div class=\"game\" tabindex=\"0\" @keyup=\"star\">\r\n    <div class=\"words\"><span v-for=\"(letter, index) in mytext\" :key=\"index\" class=\"default\">{{ letter }}</span></div>\r\n    <div class=\"focused\">Click here to begin</div>\r\n</div>\r\n<p>{{ intext }}</p>\r\n</template>\r\n<script>\r\nexport default{\r\n    data(){\r\n        return{\r\n            mytext : \"This is something for text, please enter your text here and try again later to get more information\",\r\n            intext : \"\",\r\n            myall : [],\r\n        }\r\n    },\r\n    methods:{\r\n        /*\r\n        getclass(index){\r\n            let willclass;\r\n            for(let i=0;i<=this.intext.length;i++){\r\n                if(index== this.myall[i].indexnum){\r\n                    willclass = this.myall[i].class\r\n                }\r\n            }\r\n            willclass = 'default'\r\n            return willclass\r\n        },*/\r\n        star(event){\r\n            let myword = this.intext\r\n            \r\n            if(event.key == \"Backspace\"){\r\n                myword  = myword.slice(0, -1);\r\n            }\r\n            else if(event.key == \"CapsLock\" || event.key == \"Shift\" || event.key == \"Control\" || event.key == \"AltGraph\" || event.key == \"Alt\" || event.key == \"ArrowUp\" ){\r\n                console.log(\"i don't want to change in this situation\")  \r\n            }\r\n            else{\r\n                myword += event.key\r\n            }\r\n            this.intext = myword;\r\n            let mylength = myword.length-1;\r\n            console.log(myword, mylength, myword.charAt(mylength))\r\n            let inputinfo = {\r\n                indexnum : mylength,\r\n                class : 'correct',\r\n                expectedchar: this.mytext.charAt(mylength),\r\n                writtenchar: myword.charAt(mylength), \r\n            }\r\n            this.myall = this.myall.filter(element => element.indexnum !== mylength)\r\n            this.myall = this.myall.filter(elem => elem.indexnum <= mylength)\r\n            if(this.mytext.charAt(mylength) !== myword.charAt(mylength)){\r\n                inputinfo.class = 'incorrect'\r\n            }\r\n            this.myall.push(inputinfo);\r\n            console.log(this.myall[0].indexnum)\r\n        }\r\n    }\r\n}\r\n</script>\r\n<style scoped>\r\n.default{\r\n    font-size: 30px;\r\n    color: rgb(59, 59, 59);\r\n}\r\n.correct{\r\n    color: blue;\r\n}\r\n.incorrect{\r\n    color: red;\r\n}\r\n.game{\r\n    margin-top: 100px;\r\n    height: 100px;\r\n    width: 80%;\r\n    margin: auto;\r\n    background-color: rgb(208, 203, 203);\r\n    position: relative;\r\n}\r\n.words{\r\n    filter: blur(4px);\r\n}\r\n.focused{\r\n    position: absolute;\r\n    inset: 0;\r\n    text-align: center;\r\n}\r\n.game:focus .focused{\r\n    display: none;\r\n}\r\n.game:focus .words{\r\n    filter: blur(0px);\r\n}\r\n</style>"],"mappings":";AAQA,eAAc;EACVA,IAAIA,CAAA,EAAE;IACF,OAAM;MACFC,MAAK,EAAI,qGAAqG;MAC9GC,MAAK,EAAI,EAAE;MACXC,KAAI,EAAI;IACZ;EACJ,CAAC;EACDC,OAAO,EAAC;IACJ;;;;;;;;;;;IAWAC,IAAIA,CAACC,KAAK,EAAC;MACP,IAAIC,MAAK,GAAI,IAAI,CAACL,MAAK;MAEvB,IAAGI,KAAK,CAACE,GAAE,IAAK,WAAW,EAAC;QACxBD,MAAK,GAAKA,MAAM,CAACE,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;MACjC,OACK,IAAGH,KAAK,CAACE,GAAE,IAAK,UAAS,IAAKF,KAAK,CAACE,GAAE,IAAK,OAAM,IAAKF,KAAK,CAACE,GAAE,IAAK,SAAQ,IAAKF,KAAK,CAACE,GAAE,IAAK,UAAS,IAAKF,KAAK,CAACE,GAAE,IAAK,KAAI,IAAKF,KAAK,CAACE,GAAE,IAAK,SAAQ,EAAG;QAC1JE,OAAO,CAACC,GAAG,CAAC,0CAA0C;MAC1D,OACI;QACAJ,MAAK,IAAKD,KAAK,CAACE,GAAE;MACtB;MACA,IAAI,CAACN,MAAK,GAAIK,MAAM;MACpB,IAAIK,QAAO,GAAIL,MAAM,CAACM,MAAM,GAAC,CAAC;MAC9BH,OAAO,CAACC,GAAG,CAACJ,MAAM,EAAEK,QAAQ,EAAEL,MAAM,CAACO,MAAM,CAACF,QAAQ,CAAC;MACrD,IAAIG,SAAQ,GAAI;QACZC,QAAO,EAAIJ,QAAQ;QACnBK,KAAI,EAAI,SAAS;QACjBC,YAAY,EAAE,IAAI,CAACjB,MAAM,CAACa,MAAM,CAACF,QAAQ,CAAC;QAC1CO,WAAW,EAAEZ,MAAM,CAACO,MAAM,CAACF,QAAQ;MACvC;MACA,IAAI,CAACT,KAAI,GAAI,IAAI,CAACA,KAAK,CAACiB,MAAM,CAACC,OAAM,IAAKA,OAAO,CAACL,QAAO,KAAMJ,QAAQ;MACvE,IAAI,CAACT,KAAI,GAAI,IAAI,CAACA,KAAK,CAACiB,MAAM,CAACE,IAAG,IAAKA,IAAI,CAACN,QAAO,IAAKJ,QAAQ;MAChE,IAAG,IAAI,CAACX,MAAM,CAACa,MAAM,CAACF,QAAQ,MAAML,MAAM,CAACO,MAAM,CAACF,QAAQ,CAAC,EAAC;QACxDG,SAAS,CAACE,KAAI,GAAI,WAAU;MAChC;MACA,IAAI,CAACd,KAAK,CAACoB,IAAI,CAACR,SAAS,CAAC;MAC1BL,OAAO,CAACC,GAAG,CAAC,IAAI,CAACR,KAAK,CAAC,CAAC,CAAC,CAACa,QAAQ;IACtC;EACJ;AACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}