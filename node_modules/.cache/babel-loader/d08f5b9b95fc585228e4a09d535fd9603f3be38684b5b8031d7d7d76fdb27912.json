{"ast":null,"code":"import { createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-4cebd208\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h1\", null, \"Boshladim\", -1 /* HOISTED */));\nconst _hoisted_2 = [\"src\"];\nconst _hoisted_3 = {\n  class: \"current\"\n};\nconst _hoisted_4 = {\n  class: \"hobhavo cont\"\n};\nconst _hoisted_5 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"p\", null, \"Ob-havo\", -1 /* HOISTED */));\nconst _hoisted_6 = [\"src\"];\nconst _hoisted_7 = {\n  class: \"namlik cont\"\n};\nconst _hoisted_8 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"p\", null, \"Temperatura\", -1 /* HOISTED */));\nconst _hoisted_9 = {\n  class: \"shamol cont\"\n};\nconst _hoisted_10 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"p\", null, \"Shamol tezligi\", -1 /* HOISTED */));\nconst _hoisted_11 = {\n  class: \"namlik cont\"\n};\nconst _hoisted_12 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"p\", null, \"Quyosh chiqishi\", -1 /* HOISTED */));\nconst _hoisted_13 = {\n  class: \"namlik cont\"\n};\nconst _hoisted_14 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"p\", null, \"Quyosh botishi\", -1 /* HOISTED */));\nconst _hoisted_15 = {\n  class: \"namlik cont\"\n};\nconst _hoisted_16 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"p\", null, \"Namlik\", -1 /* HOISTED */));\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(_Fragment, null, [_hoisted_1, _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.cityname = $event)\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.cityname]]), _createElementVNode(\"p\", null, _toDisplayString($data.cityname), 1 /* TEXT */), _createElementVNode(\"button\", {\n    onClick: _cache[1] || (_cache[1] = (...args) => $options.getdata && $options.getdata(...args))\n  }, [_createElementVNode(\"img\", {\n    src: $data.search,\n    alt: \"search\"\n  }, null, 8 /* PROPS */, _hoisted_2)]), _createElementVNode(\"p\", null, _toDisplayString($data.wd) + \" -\" + _toDisplayString($data.hm), 1 /* TEXT */), _createElementVNode(\"div\", _hoisted_3, [_createElementVNode(\"div\", _hoisted_4, [_hoisted_5, _createElementVNode(\"img\", {\n    src: _ctx.data.foricon,\n    alt: \"icon\"\n  }, null, 8 /* PROPS */, _hoisted_6)]), _createElementVNode(\"div\", _hoisted_7, [_hoisted_8, _createElementVNode(\"p\", null, _toDisplayString($data.datam.currentw), 1 /* TEXT */)]), _createElementVNode(\"div\", _hoisted_9, [_hoisted_10, _createElementVNode(\"p\", null, _toDisplayString($data.datam.windspeed), 1 /* TEXT */)]), _createElementVNode(\"div\", _hoisted_11, [_hoisted_12, _createTextVNode(\" foricon \"), _createElementVNode(\"p\", null, _toDisplayString($data.datam.qchiq), 1 /* TEXT */)]), _createElementVNode(\"div\", _hoisted_13, [_hoisted_14, _createElementVNode(\"p\", null, _toDisplayString($data.datam.qbot), 1 /* TEXT */)]), _createElementVNode(\"div\", _hoisted_15, [_hoisted_16, _createElementVNode(\"p\", null, _toDisplayString($data.datam.humidity) + \"%\", 1 /* TEXT */)])])], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["_createElementVNode","class","_createElementBlock","_Fragment","_hoisted_1","type","_cache","$event","$data","cityname","_toDisplayString","onClick","args","$options","getdata","src","search","alt","_hoisted_2","wd","hm","_hoisted_3","_hoisted_4","_hoisted_5","_ctx","data","foricon","_hoisted_6","_hoisted_7","_hoisted_8","datam","currentw","_hoisted_9","_hoisted_10","windspeed","_hoisted_11","_hoisted_12","_createTextVNode","qchiq","_hoisted_13","_hoisted_14","qbot","_hoisted_15","_hoisted_16","humidity"],"sources":["C:\\Users\\Windows 11\\All\\real\\vuejob\\src\\views\\AboutView.vue"],"sourcesContent":["<template>\n<h1>Boshladim</h1>\n<input type=\"text\" v-model=\"cityname\">\n<p>{{ cityname }}</p>\n<button @click=\"getdata\"><img :src=\"search\" alt=\"search\"></button>\n<p>{{ wd }} -{{ hm }}</p>\n<div class=\"current\">\n  <div class=\"hobhavo cont\">\n    <p>Ob-havo</p>\n    <img :src=\"data.foricon\" alt=\"icon\">\n  </div>\n  <div class=\"namlik cont\">\n    <p>Temperatura</p>\n    <p>{{ datam.currentw }}</p>\n  </div>\n  \n  <div class=\"shamol cont\">\n    <p>Shamol tezligi</p>\n    <p>{{ datam.windspeed }}</p>\n  </div>\n  <div class=\"namlik cont\">\n    <p>Quyosh chiqishi</p>\n    foricon\n    <p>{{ datam.qchiq }}</p>\n  </div>\n  <div class=\"namlik cont\">\n    <p>Quyosh botishi</p>\n    <p>{{ datam.qbot }}</p>\n  </div>\n  <div class=\"namlik cont\">\n    <p>Namlik</p>\n    <p>{{ datam.humidity }}%</p>\n  </div>\n</div>\n</template>\n<script>\nimport { DateTime } from \"luxon\";\nexport default {\n  data(){\n    return {\n      cityname: '',\n      cloudy : require('@/assets/cloudy.png'),\n      search : require('@/assets/search.png'),\n      rain : require('@/assets/rain.png'),\n      sunny : require('@/assets/sunny.png'),\n      thunder : require('@/assets/thunder.png'),\n      cityname: \"\",\n      defaultcityname:  \"Tashkent\",\n      forhourdata: [],\n      datam: [],\n      daily: [],\n      hourl: [],\n      city: \"\",\n      hm: \"\",\n      wd: \"\",\n      mindate: \"\",\n      maxdate: \"\",\n      hourlyweather: \"\",\n      tableshow: false,\n      yanasana: \"\",\n    }\n\n  },\n  // mounted(){\n  //   this.getdata()\n  // },\n  methods: {\n    gettime(timezone){\n      if (timezone) {\n        const now = DateTime.now().setZone(timezone);\n        const dateFormatted = now.toFormat(\"d-LLLL\"); \n        const timeFormatted = now.toFormat(\"HH:mm\");\n        const dayofweek = now.toFormat('EEE');\n        const hkun = this.hkuns(dayofweek)\n        this.hm = `${timeFormatted}`;\n        this.wd = `${hkun}, ${dateFormatted}`\n      } \n      else {\n        this.time = \"Unknown city or timezone\";\n      }\n    },\n    hkuns(enday){\n    const haftakunlar = {\n      'Mon': 'Dushanba',\n      'Tue': 'Seshanba',\n      'Wed': 'Chorshanba',\n      'Thu': 'Payshanba',\n      'Fri': 'Juma',\n      'Sat': 'Shanba',\n      'Sun': 'Yakshanba'\n    };\n    return haftakunlar[enday];\n    },\n    selsiy(temp){\n      let seltemp=(Math.floor((temp-32)*5)/9).toFixed(1);\n      return `${seltemp} Â°C`;\n\n    },\n    geticon(icons){\n      let iconify=icons;\n\n      if(iconify.includes('clear')){\n      iconify= this.sunny;\n      }\n      else if(iconify=='rain'){\n        iconify= this.rain;\n      }\n      else if(iconify.includes('thunderstorm')){\n        iconify=this.thunder;\n      }\n      else{\n        iconify = this.cloudy\n      }\n      return iconify;\n    },\n    nowinfo(info){\n      const timeString = info.currentConditions.sunrise;\n      const [hours, minutes] = timeString.split(\":\");\n      const qchiqv= `${hours}:${minutes}`;\n      const another = info.currentConditions.sunset;\n      const [hou, minu] = another.split(\":\");\n      const qbotv = `${hou}:${minu}`\n      let selsiytemp=this.selsiy(info.currentConditions.temp);\n      console.log(selsiytemp);\n      console.log(qchiqv);\n      console.log(qbotv);\n      let iconify = this.geticon(data.currentConditions.icon);\n      let inf = {\n        currentw: selsiytemp, \n        capname: data.resolvedAddress,\n        windspeed: data.currentConditions.windspeed,\n        foricon: iconify,\n        qchiq: qchiqv,\n        qbot: qbotv,\n        humidity: data.currentConditions.humidity,\n      }\n      console.log(inf);\n      this.datam = inf;\n    },\n\n    async getdata() {\n      try {\n        let cname;\n        if (this.cityname == '') {\n          cname = \"Tashkent\"\n        }\n        else{\n          cname = this.cityname\n        }\n        const response = await fetch(`https://weather.visualcrossing.com/VisualCrossingWebServices/rest/services/timeline/${cname}?unitGroup=us&key=S8GRPS82BJYVQWBERVPLSHJRA&contentType=json`)\n        const data = await response.json();\n        this.gettime(data.timezone);\n        this.nowinfo(data);\n        setInterval(() => {\n          this.gettime(data.timezone);\n        }, 30000)\n        console.log(data);\n      }\n      catch (error) {\n        console.log('City name is not found');\n      }\n      \n      \n    } \n  }\n}\n\n</script>\n<style scoped>\nimg{\n  width: 32px;\n}\n</style>"],"mappings":";;gEACAA,mBAAA,CAAkB,YAAd,WAAS;mBADb;;EAMKC,KAAK,EAAC;AAAS;;EACbA,KAAK,EAAC;AAAc;gEACvBD,mBAAA,CAAc,WAAX,SAAO;mBARd;;EAWOC,KAAK,EAAC;AAAa;gEACtBD,mBAAA,CAAkB,WAAf,aAAW;;EAIXC,KAAK,EAAC;AAAa;iEACtBD,mBAAA,CAAqB,WAAlB,gBAAc;;EAGdC,KAAK,EAAC;AAAa;iEACtBD,mBAAA,CAAsB,WAAnB,iBAAe;;EAIfC,KAAK,EAAC;AAAa;iEACtBD,mBAAA,CAAqB,WAAlB,gBAAc;;EAGdC,KAAK,EAAC;AAAa;iEACtBD,mBAAA,CAAa,WAAV,QAAM;;uBA9BbE,mBAAA,CAAAC,SAAA,SACAC,UAAkB,E,gBAClBJ,mBAAA,CAAsC;IAA/BK,IAAI,EAAC,MAAM;IAFlB,uBAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAE4BC,KAAA,CAAAC,QAAQ,GAAAF,MAAA;iDAARC,KAAA,CAAAC,QAAQ,E,GACpCT,mBAAA,CAAqB,WAAAU,gBAAA,CAAfF,KAAA,CAAAC,QAAQ,kBACdT,mBAAA,CAAkE;IAAzDW,OAAK,EAAAL,MAAA,QAAAA,MAAA,UAAAM,IAAA,KAAEC,QAAA,CAAAC,OAAA,IAAAD,QAAA,CAAAC,OAAA,IAAAF,IAAA,CAAO;MAAEZ,mBAAA,CAAgC;IAA1Be,GAAG,EAAEP,KAAA,CAAAQ,MAAM;IAAEC,GAAG,EAAC;0BAJhDC,UAAA,E,GAKAlB,mBAAA,CAAyB,WAAAU,gBAAA,CAAnBF,KAAA,CAAAW,EAAE,IAAG,IAAE,GAAAT,gBAAA,CAAGF,KAAA,CAAAY,EAAE,kBAClBpB,mBAAA,CA2BM,OA3BNqB,UA2BM,GA1BJrB,mBAAA,CAGM,OAHNsB,UAGM,GAFJC,UAAc,EACdvB,mBAAA,CAAoC;IAA9Be,GAAG,EAAES,IAAA,CAAAC,IAAI,CAACC,OAAO;IAAET,GAAG,EAAC;0BATjCU,UAAA,E,GAWE3B,mBAAA,CAGM,OAHN4B,UAGM,GAFJC,UAAkB,EAClB7B,mBAAA,CAA2B,WAAAU,gBAAA,CAArBF,KAAA,CAAAsB,KAAK,CAACC,QAAQ,iB,GAGtB/B,mBAAA,CAGM,OAHNgC,UAGM,GAFJC,WAAqB,EACrBjC,mBAAA,CAA4B,WAAAU,gBAAA,CAAtBF,KAAA,CAAAsB,KAAK,CAACI,SAAS,iB,GAEvBlC,mBAAA,CAIM,OAJNmC,WAIM,GAHJC,WAAsB,EArB1BC,gBAAA,CAqB0B,WAEtB,GAAArC,mBAAA,CAAwB,WAAAU,gBAAA,CAAlBF,KAAA,CAAAsB,KAAK,CAACQ,KAAK,iB,GAEnBtC,mBAAA,CAGM,OAHNuC,WAGM,GAFJC,WAAqB,EACrBxC,mBAAA,CAAuB,WAAAU,gBAAA,CAAjBF,KAAA,CAAAsB,KAAK,CAACW,IAAI,iB,GAElBzC,mBAAA,CAGM,OAHN0C,WAGM,GAFJC,WAAa,EACb3C,mBAAA,CAA4B,WAAAU,gBAAA,CAAtBF,KAAA,CAAAsB,KAAK,CAACc,QAAQ,IAAG,GAAC,gB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}