{"ast":null,"code":"export default {\n  data() {\n    return {\n      cityname: '',\n      cloudy: require('@/assets/cloudy.png'),\n      search: require('@/assets/search.png'),\n      rain: require('@/assets/rain.png'),\n      sunny: require('@/assets/sunny.png'),\n      thunder: require('@/assets/thunder.png')\n    };\n  },\n  // mounted(){\n  //   this.getdata()\n  // },\n  methods: {\n    async getdata() {\n      try {\n        let cname;\n        if (this.cityname == '') {\n          cname = \"Tashkent\";\n        } else {\n          cname = this.cityname;\n        }\n        const response = await fetch(`https://weather.visualcrossing.com/VisualCrossingWebServices/rest/services/timeline/${cname}?unitGroup=us&key=S8GRPS82BJYVQWBERVPLSHJRA&contentType=json`);\n        const data = await response.json();\n        console.log(data);\n      } catch (error) {\n        console.log('City name is not found');\n      }\n    }\n  }\n};","map":{"version":3,"names":["data","cityname","cloudy","require","search","rain","sunny","thunder","methods","getdata","cname","response","fetch","json","console","log","error"],"sources":["C:\\Users\\Windows 11\\All\\real\\vuejob\\src\\views\\AboutView.vue"],"sourcesContent":["<template>\n<h1>Boshladim</h1>\n<input type=\"text\" v-model=\"cityname\">\n<p>{{ cityname }}</p>\n<button @click=\"getdata\"><img :src=\"search\" alt=\"search\"></button>\n</template>\n<script>\nexport default {\n  data(){\n    return {\n      cityname: '',\n      cloudy : require('@/assets/cloudy.png'),\n      search : require('@/assets/search.png'),\n      rain : require('@/assets/rain.png'),\n      sunny : require('@/assets/sunny.png'),\n      thunder : require('@/assets/thunder.png'),\n    }\n\n  },\n  // mounted(){\n  //   this.getdata()\n  // },\n  methods: {\n    async getdata() {\n      try {\n        let cname;\n        if (this.cityname == '') {\n          cname = \"Tashkent\"\n        }\n        else{\n          cname = this.cityname\n        }\n        const response = await fetch(`https://weather.visualcrossing.com/VisualCrossingWebServices/rest/services/timeline/${cname}?unitGroup=us&key=S8GRPS82BJYVQWBERVPLSHJRA&contentType=json`)\n        const data = await response.json();\n        console.log(data);\n      }\n      catch (error) {\n        console.log('City name is not found');\n      }\n      \n      \n    } \n  }\n}\n\n</script>\n<style scoped>\nimg{\n  width: 32px;\n}\n</style>"],"mappings":"AAOA,eAAe;EACbA,IAAIA,CAAA,EAAE;IACJ,OAAO;MACLC,QAAQ,EAAE,EAAE;MACZC,MAAK,EAAIC,OAAO,CAAC,qBAAqB,CAAC;MACvCC,MAAK,EAAID,OAAO,CAAC,qBAAqB,CAAC;MACvCE,IAAG,EAAIF,OAAO,CAAC,mBAAmB,CAAC;MACnCG,KAAI,EAAIH,OAAO,CAAC,oBAAoB,CAAC;MACrCI,OAAM,EAAIJ,OAAO,CAAC,sBAAsB;IAC1C;EAEF,CAAC;EACD;EACA;EACA;EACAK,OAAO,EAAE;IACP,MAAMC,OAAOA,CAAA,EAAG;MACd,IAAI;QACF,IAAIC,KAAK;QACT,IAAI,IAAI,CAACT,QAAO,IAAK,EAAE,EAAE;UACvBS,KAAI,GAAI,UAAS;QACnB,OACI;UACFA,KAAI,GAAI,IAAI,CAACT,QAAO;QACtB;QACA,MAAMU,QAAO,GAAI,MAAMC,KAAK,CAAE,uFAAsFF,KAAM,8DAA6D;QACvL,MAAMV,IAAG,GAAI,MAAMW,QAAQ,CAACE,IAAI,CAAC,CAAC;QAClCC,OAAO,CAACC,GAAG,CAACf,IAAI,CAAC;MACnB,EACA,OAAOgB,KAAK,EAAE;QACZF,OAAO,CAACC,GAAG,CAAC,wBAAwB,CAAC;MACvC;IAGF;EACF;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}