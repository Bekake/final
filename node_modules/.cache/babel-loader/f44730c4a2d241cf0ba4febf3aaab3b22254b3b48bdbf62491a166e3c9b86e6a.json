{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport * as CodeMirror from 'codemirror';\nimport 'codemirror/lib/codemirror.css';\nimport 'codemirror/theme/dracula.css';\nimport 'codemirror/mode/javascript/javascript.js';\nimport 'codemirror/mode/gfm/gfm.js';\nimport 'codemirror/addon/edit/closebrackets.js';\nimport 'codemirror/addon/edit/matchbrackets.js';\nimport { coding } from '../mytextes/codetext.js';\nexport default {\n  data() {\n    return {\n      myshow: false,\n      intext: \"\",\n      mytext: coding[2],\n      myall: []\n    };\n  },\n  mounted() {\n    this.editor = CodeMirror.fromTextArea(document.getElementById(\"program\"), {\n      lineNumbers: true,\n      theme: 'dracula',\n      mode: 'javascript',\n      autoCloseBrackets: true,\n      matchBrackets: true\n    });\n    this.editor.setValue(this.intext);\n    this.editor.on('change', () => {\n      this.intext = this.editor.getValue();\n      this.check(this.intext);\n    });\n  },\n  methods: {\n    check(text) {\n      let mylength = text.length;\n      let chechtext = this.mytext.substring(0, mylength);\n      let myinfo = {\n        indexnum: mylength,\n        wholetext: chechtext,\n        writtentext: text,\n        class: 'incorrect'\n      };\n      if (text.charAt(mylength - 2) == '(') {\n        let myind = this.mytext.indexOf(')');\n        myinfo.indexnum = myind;\n        myinfo.class = 'correct', this.myall.push(myinfo);\n        myinfo.indexnum = mylength - 2;\n        myinfo.class = 'correct';\n        this.myall.push(myinfo);\n      }\n      console.log(myinfo);\n      // console.log(text.charAt(mylength-1))\n      // if(text == chechtext){\n      //     console.log(\"correct\")\n      // }\n      // else{\n      //     console.log(\"incorrect\")\n      // }\n    }\n  }\n};","map":{"version":3,"names":["CodeMirror","coding","data","myshow","intext","mytext","myall","mounted","editor","fromTextArea","document","getElementById","lineNumbers","theme","mode","autoCloseBrackets","matchBrackets","setValue","on","getValue","check","methods","text","mylength","length","chechtext","substring","myinfo","indexnum","wholetext","writtentext","class","charAt","myind","indexOf","push","console","log"],"sources":["C:\\Users\\Windows 11\\All\\real\\vuejob\\src\\views\\new.vue"],"sourcesContent":["<template>\r\n    <textarea v-model=\"intext\" name=\"programming\" id=\"program\" @input=\"check\"></textarea>\r\n    <pre><span v-for=\"(letter, index) in mytext\" class=\"every\" :key=\"index\">{{ letter }}</span></pre>\r\n    <pre>{{ intext }}</pre>\r\n</template> \r\n<script>\r\nimport * as CodeMirror from 'codemirror';\r\nimport 'codemirror/lib/codemirror.css';\r\nimport 'codemirror/theme/dracula.css';\r\nimport 'codemirror/mode/javascript/javascript.js';\r\nimport 'codemirror/mode/gfm/gfm.js';\r\nimport 'codemirror/addon/edit/closebrackets.js';\r\nimport 'codemirror/addon/edit/matchbrackets.js';\r\nimport {coding} from '../mytextes/codetext.js';\r\nexport default{\r\n    data(){\r\n        return{\r\n            myshow: false,\r\n            intext: \"\",\r\n            mytext : coding[2],\r\n            myall: [],\r\n        }\r\n    },\r\n    mounted() {\r\n        this.editor = CodeMirror.fromTextArea(document.getElementById(\"program\"), {\r\n            lineNumbers: true,\r\n            theme: 'dracula',\r\n            mode: 'javascript',\r\n            autoCloseBrackets: true,\r\n            matchBrackets: true,\r\n        });\r\n        this.editor.setValue(this.intext);\r\n        this.editor.on('change', () => {\r\n            this.intext = this.editor.getValue();\r\n            this.check(this.intext)\r\n        });\r\n    },\r\n    methods:{\r\n        check(text){\r\n            let mylength = text.length\r\n            let chechtext = this.mytext.substring(0, mylength)\r\n            let myinfo = {\r\n                indexnum : mylength,\r\n                wholetext : chechtext,\r\n                writtentext : text,\r\n                class: 'incorrect'\r\n            }\r\n            if(text.charAt(mylength-2) == '('){\r\n                let myind = this.mytext.indexOf(')')\r\n                myinfo.indexnum = myind;\r\n                myinfo.class = 'correct',\r\n                this.myall.push(myinfo)\r\n                myinfo.indexnum = mylength-2;\r\n                myinfo.class = 'correct'\r\n                this.myall.push(myinfo)\r\n            }\r\n            console.log(myinfo)\r\n            // console.log(text.charAt(mylength-1))\r\n            // if(text == chechtext){\r\n            //     console.log(\"correct\")\r\n            // }\r\n            // else{\r\n            //     console.log(\"incorrect\")\r\n            // }\r\n        }\r\n    }\r\n}\r\n</script>\r\n<style scoped>\r\n.every{\r\n    color: black;\r\n}\r\n.correct{\r\n    color: blue;\r\n}\r\n.incorrect{\r\n    color: red;\r\n}\r\n</style>"],"mappings":";AAMA,OAAO,KAAKA,UAAS,MAAO,YAAY;AACxC,OAAO,+BAA+B;AACtC,OAAO,8BAA8B;AACrC,OAAO,0CAA0C;AACjD,OAAO,4BAA4B;AACnC,OAAO,wCAAwC;AAC/C,OAAO,wCAAwC;AAC/C,SAAQC,MAAM,QAAO,yBAAyB;AAC9C,eAAc;EACVC,IAAIA,CAAA,EAAE;IACF,OAAM;MACFC,MAAM,EAAE,KAAK;MACbC,MAAM,EAAE,EAAE;MACVC,MAAK,EAAIJ,MAAM,CAAC,CAAC,CAAC;MAClBK,KAAK,EAAE;IACX;EACJ,CAAC;EACDC,OAAOA,CAAA,EAAG;IACN,IAAI,CAACC,MAAK,GAAIR,UAAU,CAACS,YAAY,CAACC,QAAQ,CAACC,cAAc,CAAC,SAAS,CAAC,EAAE;MACtEC,WAAW,EAAE,IAAI;MACjBC,KAAK,EAAE,SAAS;MAChBC,IAAI,EAAE,YAAY;MAClBC,iBAAiB,EAAE,IAAI;MACvBC,aAAa,EAAE;IACnB,CAAC,CAAC;IACF,IAAI,CAACR,MAAM,CAACS,QAAQ,CAAC,IAAI,CAACb,MAAM,CAAC;IACjC,IAAI,CAACI,MAAM,CAACU,EAAE,CAAC,QAAQ,EAAE,MAAM;MAC3B,IAAI,CAACd,MAAK,GAAI,IAAI,CAACI,MAAM,CAACW,QAAQ,CAAC,CAAC;MACpC,IAAI,CAACC,KAAK,CAAC,IAAI,CAAChB,MAAM;IAC1B,CAAC,CAAC;EACN,CAAC;EACDiB,OAAO,EAAC;IACJD,KAAKA,CAACE,IAAI,EAAC;MACP,IAAIC,QAAO,GAAID,IAAI,CAACE,MAAK;MACzB,IAAIC,SAAQ,GAAI,IAAI,CAACpB,MAAM,CAACqB,SAAS,CAAC,CAAC,EAAEH,QAAQ;MACjD,IAAII,MAAK,GAAI;QACTC,QAAO,EAAIL,QAAQ;QACnBM,SAAQ,EAAIJ,SAAS;QACrBK,WAAU,EAAIR,IAAI;QAClBS,KAAK,EAAE;MACX;MACA,IAAGT,IAAI,CAACU,MAAM,CAACT,QAAQ,GAAC,CAAC,KAAK,GAAG,EAAC;QAC9B,IAAIU,KAAI,GAAI,IAAI,CAAC5B,MAAM,CAAC6B,OAAO,CAAC,GAAG;QACnCP,MAAM,CAACC,QAAO,GAAIK,KAAK;QACvBN,MAAM,CAACI,KAAI,GAAI,SAAS,EACxB,IAAI,CAACzB,KAAK,CAAC6B,IAAI,CAACR,MAAM;QACtBA,MAAM,CAACC,QAAO,GAAIL,QAAQ,GAAC,CAAC;QAC5BI,MAAM,CAACI,KAAI,GAAI,SAAQ;QACvB,IAAI,CAACzB,KAAK,CAAC6B,IAAI,CAACR,MAAM;MAC1B;MACAS,OAAO,CAACC,GAAG,CAACV,MAAM;MAClB;MACA;MACA;MACA;MACA;MACA;MACA;IACJ;EACJ;AACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}