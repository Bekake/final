{"ast":null,"code":"import { createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, toDisplayString as _toDisplayString, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"h1\", null, \"this is for test\", -1 /* HOISTED */);\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(_Fragment, null, [_hoisted_1, _withDirectives(_createElementVNode(\"textarea\", {\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.intext = $event),\n    name: \"programming\",\n    id: \"program\",\n    onInput: _cache[1] || (_cache[1] = (...args) => _ctx.check && _ctx.check(...args))\n  }, null, 544 /* NEED_HYDRATION, NEED_PATCH */), [[_vModelText, $data.intext]]), _createElementVNode(\"p\", null, _toDisplayString($data.mytext), 1 /* TEXT */), _createElementVNode(\"div\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.mytext, (code, index) => {\n    return _openBlock(), _createElementBlock(\"span\", {\n      key: index\n    }, _toDisplayString(code), 1 /* TEXT */);\n  }), 128 /* KEYED_FRAGMENT */))]), _createElementVNode(\"pre\", null, _toDisplayString($data.intext), 1 /* TEXT */)], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["_createElementVNode","_createElementBlock","_Fragment","_hoisted_1","_cache","$event","$data","intext","name","id","onInput","args","_ctx","check","_toDisplayString","mytext","_renderList","code","index","key"],"sources":["C:\\Users\\Windows 11\\All\\real\\vuejob\\src\\views\\new.vue"],"sourcesContent":["<template>\r\n    <h1>this is for test</h1>\r\n    <textarea v-model=\"intext\" name=\"programming\" id=\"program\" @input=\"check\"></textarea>\r\n    <p>{{ mytext }}</p>\r\n    <div>\r\n        <span v-for=\"(code, index) in mytext\" :key=\"index\">{{ code }}</span>\r\n    </div>\r\n    <pre>{{ intext }}</pre>\r\n</template> \r\n<script>\r\nimport * as CodeMirror from 'codemirror';\r\nimport 'codemirror/lib/codemirror.css';\r\nimport 'codemirror/theme/dracula.css';\r\nimport 'codemirror/mode/javascript/javascript.js';\r\nimport 'codemirror/mode/gfm/gfm.js';\r\nimport 'codemirror/addon/edit/closebrackets.js';\r\nimport 'codemirror/addon/edit/matchbrackets.js';\r\nimport {coding} from '../mytextes/codetext.js';\r\nexport default{\r\n    data(){\r\n        return{\r\n            myshow: false,\r\n            intext: \"\",\r\n            mytext : coding,\r\n        }\r\n    },\r\n    mounted() {\r\n        this.editor = CodeMirror.fromTextArea(document.getElementById(\"program\"), {\r\n            lineNumbers: true,\r\n            theme: 'dracula',\r\n            mode: 'javascript',\r\n            autoCloseBrackets: true,\r\n            matchBrackets: true,\r\n        });\r\n        this.editor.setValue(this.intext);\r\n        this.editor.on('change', () => {\r\n            this.intext = this.editor.getValue();\r\n        });\r\n    },\r\n    methods:{\r\n    }\r\n}\r\n</script>\r\n<style scoped>\r\n\r\n</style>"],"mappings":";gCACIA,mBAAA,CAAyB,YAArB,kBAAgB;;uBADxBC,mBAAA,CAAAC,SAAA,SACIC,UAAyB,E,gBACzBH,mBAAA,CAAqF;IAFzF,uBAAAI,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAEuBC,KAAA,CAAAC,MAAM,GAAAF,MAAA;IAAEG,IAAI,EAAC,aAAa;IAACC,EAAE,EAAC,SAAS;IAAEC,OAAK,EAAAN,MAAA,QAAAA,MAAA,UAAAO,IAAA,KAAEC,IAAA,CAAAC,KAAA,IAAAD,IAAA,CAAAC,KAAA,IAAAF,IAAA,CAAK;iEAArDL,KAAA,CAAAC,MAAM,E,GACzBP,mBAAA,CAAmB,WAAAc,gBAAA,CAAbR,KAAA,CAAAS,MAAM,kBACZf,mBAAA,CAEM,e,kBADFC,mBAAA,CAAoEC,SAAA,QAL5Ec,WAAA,CAKsCV,KAAA,CAAAS,MAAM,EAL5C,CAKsBE,IAAI,EAAEC,KAAK;yBAAzBjB,mBAAA,CAAoE;MAA7BkB,GAAG,EAAED;IAAK,GAAAJ,gBAAA,CAAKG,IAAI;oCAE9DjB,mBAAA,CAAuB,aAAAc,gBAAA,CAAfR,KAAA,CAAAC,MAAM,iB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}