{"ast":null,"code":"import { vModelText as _vModelText, createElementVNode as _createElementVNode, withDirectives as _withDirectives, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, normalizeClass as _normalizeClass, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-74f55114\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"min\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createElementVNode(\"div\", _hoisted_1, [_withDirectives(_createElementVNode(\"textarea\", {\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.intext = $event),\n    name: \"programming\",\n    id: \"program\",\n    onInput: _cache[1] || (_cache[1] = (...args) => $options.check && $options.check(...args))\n  }, null, 544 /* NEED_HYDRATION, NEED_PATCH */), [[_vModelText, $data.intext]])]), _createElementVNode(\"pre\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.mytext, (letter, index) => {\n    return _openBlock(), _createElementBlock(\"span\", {\n      class: _normalizeClass($options.getclass(index)),\n      key: index\n    }, _toDisplayString(letter), 3 /* TEXT, CLASS */);\n  }), 128 /* KEYED_FRAGMENT */))]), _createElementVNode(\"pre\", null, _toDisplayString($data.intext), 1 /* TEXT */), _createElementVNode(\"button\", {\n    onClick: _cache[2] || (_cache[2] = (...args) => $options.myfoc && $options.myfoc(...args))\n  }, \"Focus\")], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["class","_createElementBlock","_Fragment","_createElementVNode","_hoisted_1","_cache","$event","$data","intext","name","id","onInput","args","$options","check","_renderList","mytext","letter","index","_normalizeClass","getclass","key","_toDisplayString","onClick","myfoc"],"sources":["C:\\Users\\Windows 11\\All\\real\\vuejob\\src\\views\\new.vue"],"sourcesContent":["<template>\r\n    <div class=\"min\">\r\n        <textarea v-model=\"intext\" name=\"programming\" id=\"program\" @input=\"check\"></textarea>\r\n    </div>\r\n    <pre><span v-for=\"(letter, index) in mytext\"  :class=\"getclass(index)\" :key=\"index\">{{ letter }}</span></pre>\r\n    <pre>{{ intext }}</pre>\r\n    <button @click=\"myfoc\">Focus</button>\r\n</template> \r\n<script>\r\nimport * as CodeMirror from 'codemirror';\r\nimport 'codemirror/lib/codemirror.css';\r\nimport 'codemirror/theme/dracula.css';\r\nimport 'codemirror/mode/javascript/javascript.js';\r\nimport 'codemirror/mode/gfm/gfm.js';\r\nimport 'codemirror/addon/edit/closebrackets.js';\r\nimport 'codemirror/addon/edit/matchbrackets.js';\r\nimport {coding} from '../mytextes/codetext.js';\r\n\r\nexport default {\r\n    data() {\r\n        return {\r\n            myshow: false,\r\n            intext: \"\",\r\n            mytext: coding[2],\r\n            myall: [],\r\n            mynow: 0,\r\n        };\r\n    },\r\n    mounted() {\r\n        this.editor = CodeMirror.fromTextArea(document.getElementById(\"program\"), {\r\n            lineNumbers: true,\r\n            theme: 'dracula',\r\n            mode: 'javascript',\r\n            autoCloseBrackets: true,\r\n            matchBrackets: true,\r\n            indentUnit: 4,\r\n            tabSize: 4,\r\n        });\r\n        this.editor.setValue(this.intext);\r\n        this.editor.on('change', () => {\r\n            this.intext = this.editor.getValue();\r\n            this.check(this.intext);\r\n        });\r\n    },\r\n    methods: {\r\n        getCursorIndex() {\r\n            const cursor = this.editor.getCursor();\r\n            const cursorIndex = this.editor.indexFromPos(cursor);\r\n            return cursorIndex;\r\n        },\r\n        myfoc(){\r\n            this.editor.focus();\r\n            console.log(this.mynow)\r\n        },\r\n        myfocus() {\r\n            const cursorIndex = this.getCursorIndex();\r\n            this.findIndexInMyAll(cursorIndex);\r\n        },\r\n        findIndexInMyAll(cursorIndex) {\r\n            const entry = this.myall.find(entry => entry.indexnum === cursorIndex-1);\r\n            if (entry) {\r\n                this.mynow = entry.indexnum;\r\n            } \r\n        },\r\n        getclass(index) {\r\n            let reclass = 'every';\r\n            if (this.myall) {\r\n                for (let i = 0; i < this.myall.length; i++) {\r\n                    if (this.myall[i].indexnum == index) {\r\n                        reclass = this.myall[i].class;\r\n                    }\r\n                }\r\n            }\r\n            return reclass;\r\n        },\r\n        getsecond(num, birinchi, ikkinchi, yourclass) {\r\n            let birinfo = {\r\n                indexnum: num,\r\n                expect: this.mytext[num],\r\n                writtenchar: birinchi,\r\n                class: yourclass,\r\n            };\r\n            let lastindex = this.mytext.indexOf(ikkinchi, num + 1);\r\n            let ikkiinfo = {\r\n                indexnum: lastindex,\r\n                expect: this.mytext[num],\r\n                writtenchar: ikkinchi,\r\n                class: 'correct',\r\n            };\r\n            this.myall.push(birinfo, ikkiinfo);\r\n        },\r\n        check(text) {\r\n            \r\n            let mylength = text.length - 1;\r\n            this.myall = [];\r\n            let another = true;\r\n            let yana = true;\r\n            let boshqa = true;\r\n            for (let i = 0; i <= mylength; i++) {\r\n                let goon = true;\r\n                let myinfo = {\r\n                    indexnum: i,\r\n                    expect: this.mytext[i],\r\n                    writtenchar: text[i],\r\n                    class: 'correct',\r\n                };\r\n                if (text[i] !== this.mytext[i]) {\r\n                    myinfo.class = 'incorrect';\r\n                }\r\n                if (text[i] == '(') {\r\n                    this.getsecond(i, '(', ')', myinfo.class);\r\n                    goon = false;\r\n                } else if (text[i] == ')') {\r\n                    goon = false;\r\n                } else if (text[i] == '}') {\r\n                    goon = false;\r\n                } else if (text[i] == '\"') {\r\n                    if (another) {\r\n                        this.getsecond(i, '\"', '\"', myinfo.class);\r\n                    }\r\n                    another = false;\r\n                    goon = false;\r\n                } else if (text[i] == '`') {\r\n                    if (yana) {\r\n                        this.getsecond(i, '`', '`', myinfo.class);\r\n                    }\r\n                    yana = false;\r\n                    goon = false;\r\n                } else if (text[i] == '{') {\r\n                    this.getsecond(i, '{', '}', myinfo.class);\r\n                    goon = false;\r\n                } else if (text[i] == \"'\") {\r\n                    if (boshqa) {\r\n                        this.getsecond(i, \"'\", \"'\", myinfo.class);\r\n                    }\r\n                    boshqa = false;\r\n                    goon = false;\r\n                }\r\n                if (goon) {\r\n                    this.myall.push(myinfo);\r\n                }\r\n                console.log(this.myall)\r\n                this.myfocus()\r\n            }\r\n        }\r\n    }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.every {\r\n    color: black;\r\n}\r\n.correct {\r\n    color: blue;\r\n}\r\n.incorrect {\r\n    color: red;\r\n}\r\n</style>\r\n"],"mappings":";;;EACSA,KAAK,EAAC;AAAK;;uBADpBC,mBAAA,CAAAC,SAAA,SACIC,mBAAA,CAEM,OAFNC,UAEM,G,gBADFD,mBAAA,CAAqF;IAF7F,uBAAAE,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAE2BC,KAAA,CAAAC,MAAM,GAAAF,MAAA;IAAEG,IAAI,EAAC,aAAa;IAACC,EAAE,EAAC,SAAS;IAAEC,OAAK,EAAAN,MAAA,QAAAA,MAAA,UAAAO,IAAA,KAAEC,QAAA,CAAAC,KAAA,IAAAD,QAAA,CAAAC,KAAA,IAAAF,IAAA,CAAK;iEAArDL,KAAA,CAAAC,MAAM,E,KAE7BL,mBAAA,CAA6G,e,kBAAxGF,mBAAA,CAAkGC,SAAA,QAJ3Ga,WAAA,CAIyCR,KAAA,CAAAS,MAAM,EAJ/C,CAIuBC,MAAM,EAAEC,KAAK;yBAA3BjB,mBAAA,CAAkG;MAAxDD,KAAK,EAJxDmB,eAAA,CAI0DN,QAAA,CAAAO,QAAQ,CAACF,KAAK;MAAIG,GAAG,EAAEH;wBAAUD,MAAM;oCAC7Fd,mBAAA,CAAuB,aAAAmB,gBAAA,CAAff,KAAA,CAAAC,MAAM,kBACdL,mBAAA,CAAqC;IAA5BoB,OAAK,EAAAlB,MAAA,QAAAA,MAAA,UAAAO,IAAA,KAAEC,QAAA,CAAAW,KAAA,IAAAX,QAAA,CAAAW,KAAA,IAAAZ,IAAA,CAAK;KAAE,OAAK,E","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}