{"ast":null,"code":"import { createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"h1\", null, \"Boshladim\", -1 /* HOISTED */);\nexport function render(_ctx, _cache) {\n  return _openBlock(), _createElementBlock(_Fragment, null, [_hoisted_1, _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => _ctx.cityname = $event)\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, _ctx.cityname]])], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["_createElementVNode","_createElementBlock","_Fragment","_hoisted_1","type","_cache","$event","_ctx","cityname"],"sources":["C:\\Users\\Windows 11\\All\\real\\vuejob\\src\\views\\AboutView.vue"],"sourcesContent":["<template>\n<h1>Boshladim</h1>\n<input type=\"text\" v-model=\"cityname\">\n</template>\n<script>\nexport default {\n  data(){\n    return {\n      cityname: '',\n    }\n\n  },\n  methods: {\n    async getdata() {\n      try {\n        let cname;\n        if (this.cityname == '') {\n          cname = \"Tashkent\"\n        }\n        else{\n          cname = this.cityname\n        }\n        const response = await fetch(`https://weather.visualcrossing.com/VisualCrossingWebServices/rest/services/timeline/${cname}?unitGroup=us&key=S8GRPS82BJYVQWBERVPLSHJRA&contentType=json`)\n        const data = await response.json();\n        console.log(data);\n      }\n    } \n  }\n}\n\n</script>"],"mappings":";gCACAA,mBAAA,CAAkB,YAAd,WAAS;;uBADbC,mBAAA,CAAAC,SAAA,SACAC,UAAkB,E,gBAClBH,mBAAA,CAAsC;IAA/BI,IAAI,EAAC,MAAM;IAFlB,uBAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAE4BC,IAAA,CAAAC,QAAQ,GAAAF,MAAA;iDAARC,IAAA,CAAAC,QAAQ,E","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}