{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { myuzbbir, rus } from '../mytextes/textes.js';\nexport default {\n  data() {\n    return {\n      mytext: rus[0],\n      intext: \"\",\n      vaqt: \"bir\",\n      myall: [],\n      upcoming: 0,\n      mshow: true,\n      anim: false,\n      selected: \"uzb\",\n      mytime: 60,\n      foranimate: 60,\n      min: 0,\n      secund: 0,\n      stoptimer: null\n    };\n  },\n  computed: {\n    dyncss() {\n      let antime = this.foranimate;\n      console.log(antime);\n      return {\n        '--animatime': this.foranimate + 's'\n      };\n    }\n  },\n  methods: {\n    gettil() {\n      console.log(\"I will fill it\");\n    },\n    gettime() {\n      if (this.vaqt == \"bir\") {\n        this.mytime = 60;\n        this.foranimate = 60;\n      } else if (this.vaqt == \"uch\") {\n        this.mytime = 180;\n        this.foranimate = 180;\n      } else if (this.vaqt == \"besh\") {\n        this.mytime = 300;\n        this.foranimate = 300;\n      } else {\n        this.mytime = 60;\n        this.foranimate = 60;\n      }\n    },\n    resetanimation() {\n      this.anim = false;\n    },\n    change() {\n      if (this.mshow) {\n        this.$refs.inputref.focus();\n      }\n    },\n    getclass(index) {\n      let willclass = 'default';\n      if (this.myall.length > 0) {\n        for (let i = 0; i < this.intext.length; i++) {\n          if (index == this.upcoming) {\n            willclass = 'upcoming';\n            break;\n          } else if (index == this.myall[i].indexnum) {\n            willclass = this.myall[i].class;\n            break;\n          }\n        }\n      }\n      return willclass;\n    },\n    mytimer() {\n      this.anim = true;\n      this.stoptimer = setInterval(() => {\n        let mtim = this.mytime;\n        if (mtim > 0) {\n          mtim--;\n          this.min = String(Math.floor(mtim / 60)).padStart(2, '0');\n          this.secund = String(Math.floor(mtim % 60)).padStart(2, '0');\n        } else {\n          clearInterval(this.stoptimer);\n        }\n        this.mytime = mtim;\n      }, 1000);\n    },\n    star(event) {\n      let myword = this.intext;\n      let plus = 0;\n      let current = 1;\n      if (event.key == \"Backspace\") {\n        myword = myword.slice(0, -1);\n        current = 0;\n      } else if (event.altKey || event.ctrlKey || event.metaKey || event.key == \"Enter\" || event.key == \"CapsLock\" || event.key == \"AltGraph\" || event.key == \"Alt\" || event.key == \"ArrowUp\" || event.key == \"ArrowUp\" || event.key == \"ArrowDown\" || event.key == \"ArrowRight\" || event.key == \"ArrowLeft\") {\n        myword = myword;\n      } else if (event.key == 'Shift') {\n        console.log(event.key.toUpperCase);\n      } else {\n        myword += event.key;\n        plus = 1;\n      }\n      this.intext = myword;\n      if (myword.length == 1) {\n        this.mytimer();\n      }\n      let mylength = myword.length - plus;\n      this.upcoming = mylength + current;\n      let inputinfo = {\n        indexnum: mylength,\n        class: 'correct',\n        expectedchar: this.mytext.charAt(mylength),\n        writtenchar: myword.charAt(mylength)\n      };\n      this.myall = this.myall.filter(element => element.indexnum !== mylength);\n      this.myall = this.myall.filter(elem => elem.indexnum <= mylength);\n      if (this.mytext.charAt(mylength) !== myword.charAt(mylength)) {\n        inputinfo.class = 'incorrect';\n      }\n      this.myall.push(inputinfo);\n    }\n  }\n};","map":{"version":3,"names":["myuzbbir","rus","data","mytext","intext","vaqt","myall","upcoming","mshow","anim","selected","mytime","foranimate","min","secund","stoptimer","computed","dyncss","antime","console","log","methods","gettil","gettime","resetanimation","change","$refs","inputref","focus","getclass","index","willclass","length","i","indexnum","class","mytimer","setInterval","mtim","String","Math","floor","padStart","clearInterval","star","event","myword","plus","current","key","slice","altKey","ctrlKey","metaKey","toUpperCase","mylength","inputinfo","expectedchar","charAt","writtenchar","filter","element","elem","push"],"sources":["C:\\Users\\Windows 11\\All\\real\\vuejob\\src\\views\\speed.vue"],"sourcesContent":["<template>\r\n<div class=\"speed\">\r\n    <label for=\"til\">Tilni tanlang: </label>\r\n    <select v-model=\"selected\" name=\"mytil\" id=\"til\" @change=\"gettil\">\r\n        <option value=\"uzb\">O'zbek</option>\r\n        <option value=\"rus\">Rus</option>\r\n        <option value=\"ingliz\">Ingliz</option>\r\n        <option value=\"code\">Code yozish</option>\r\n    </select>\r\n    <label for=\"vaqt\">Vaqtni tanlang: </label>\r\n    <select v-model=\"vaqt\" name=\"myvaqt\" id=\"vaqt\" @change=\"gettime\">\r\n        <option value=\"bir\">1 min</option>\r\n        <option value=\"uch\">3 min</option>\r\n        <option value=\"besh\">5 min</option>\r\n        <option value=\"cheksiz\">Cheksiz</option>\r\n    </select>\r\n    <button @click=\"change\">O'yinni boshlash</button>\r\n    <div class=\"container\" >\r\n        <div class=\"first\"></div>\r\n        <div  class=\"time\">{{ min }} : {{ secund }}</div>\r\n        <div :style=\"dyncss\" :class=\"{'second' : anim}\" @animationend=\"resetanimation\"></div>\r\n        <div class=\"fifth\"></div>\r\n        <div :style=\"dyncss\" :class=\"{'third' : anim}\" @animationend=\"resetanimation\"></div>\r\n        <div class=\"fourth\"></div>\r\n    </div>\r\n    <div class=\"game\" tabindex=\"0\" @keydown=\"star\" ref=\"inputref\">\r\n        <div class=\"words\"><span class=\"every\" v-for=\"(letter, index) in mytext\" :key=\"index\" :class=\"getclass(index)\">{{ letter }}</span></div>\r\n    </div>\r\n</div>\r\n\r\n</template>\r\n<script>\r\nimport {myuzbbir, rus} from '../mytextes/textes.js';\r\nexport default{\r\n    data(){\r\n        return{\r\n            mytext : rus[0],\r\n            intext : \"\",\r\n            vaqt: \"bir\",\r\n            myall : [],\r\n            upcoming: 0,\r\n            mshow: true,\r\n            anim: false,\r\n            selected: \"uzb\",\r\n            mytime : 60,\r\n            foranimate: 60,\r\n            min: 0,\r\n            secund: 0,\r\n            stoptimer: null,\r\n        }\r\n    },\r\n    computed: {\r\n        dyncss(){\r\n            let antime = this.foranimate;\r\n            console.log(antime)\r\n            return{\r\n                '--animatime' : this.foranimate + 's'\r\n            }\r\n        }\r\n    },\r\n    methods:{\r\n        gettil(){\r\n            console.log(\"I will fill it\")\r\n        },\r\n        gettime(){\r\n            if(this.vaqt == \"bir\"){\r\n                this.mytime = 60;\r\n                this.foranimate = 60;\r\n            }\r\n            else if(this.vaqt == \"uch\"){\r\n                this.mytime = 180;\r\n                this.foranimate = 180;\r\n            }\r\n            else if(this.vaqt == \"besh\"){\r\n                this.mytime = 300;\r\n                this.foranimate = 300;\r\n            }\r\n            else{\r\n                this.mytime = 60;\r\n                this.foranimate = 60;\r\n            }\r\n        },\r\n        resetanimation(){\r\n            this.anim = false;\r\n        },\r\n        change(){\r\n            if(this.mshow){\r\n                this.$refs.inputref.focus();\r\n            }\r\n        },\r\n        getclass(index){\r\n            let willclass = 'default';\r\n            if(this.myall.length > 0){\r\n                for(let i = 0; i < this.intext.length;i++){\r\n                    if(index == this.upcoming){\r\n                        willclass = 'upcoming'\r\n                        break;\r\n                    }\r\n                    else if(index== this.myall[i].indexnum){\r\n                        willclass = this.myall[i].class;\r\n                            break;\r\n                    }\r\n                }\r\n            }\r\n            return willclass;\r\n        },\r\n        mytimer(){\r\n            this.anim = true;\r\n            this.stoptimer = setInterval(() => {\r\n                let mtim = this.mytime;\r\n                if(mtim > 0){\r\n                    mtim--;\r\n                    this.min = String(Math.floor(mtim/60)).padStart(2, '0')\r\n                    this.secund = String(Math.floor(mtim%60)).padStart(2, '0')\r\n                }\r\n                else{\r\n                    clearInterval(this.stoptimer)\r\n                }\r\n                this.mytime = mtim;\r\n            }, 1000);\r\n        },\r\n        star(event){\r\n            let myword = this.intext\r\n            let plus = 0;\r\n            let  current = 1;\r\n            if(event.key == \"Backspace\"){\r\n                myword  = myword.slice(0, -1);\r\n                current = 0;\r\n            }\r\n            else if( event.altKey || event.ctrlKey || event.metaKey || event.key == \"Enter\" || event.key == \"CapsLock\" || event.key == \"AltGraph\" || event.key == \"Alt\" || event.key == \"ArrowUp\" || event.key == \"ArrowUp\"|| event.key == \"ArrowDown\"|| event.key == \"ArrowRight\"|| event.key == \"ArrowLeft\" ){\r\n                myword = myword;\r\n            }\r\n            else if(event.key == 'Shift'){\r\n                console.log(event.key.toUpperCase)\r\n            }\r\n            else{\r\n                myword += event.key\r\n                plus = 1;\r\n            }\r\n            this.intext = myword;\r\n            if(myword.length == 1){\r\n                this.mytimer()\r\n            }\r\n            let mylength = myword.length-plus;\r\n            this.upcoming = mylength +current;\r\n            let inputinfo = {\r\n                indexnum : mylength,\r\n                class : 'correct',\r\n                expectedchar: this.mytext.charAt(mylength),\r\n                writtenchar: myword.charAt(mylength), \r\n            }\r\n            this.myall = this.myall.filter(element => element.indexnum !== mylength)\r\n            this.myall = this.myall.filter(elem => elem.indexnum <= mylength)\r\n            if(this.mytext.charAt(mylength) !== myword.charAt(mylength)){\r\n                inputinfo.class = 'incorrect'\r\n            }\r\n            this.myall.push(inputinfo)\r\n            \r\n        }\r\n    }\r\n}\r\n</script>\r\n<style scoped>\r\n.first{\r\n    z-index: 1;\r\n    width: 160px;\r\n    height: 160px;\r\n    border-radius: 50%;\r\n    background-color: gray;\r\n    position: absolute;\r\n}\r\n.time{\r\n    position: absolute;\r\n    z-index: 6;\r\n    width: 145px;\r\n    height: 145px;\r\n    background: transparent;\r\n    color: white;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    font-size: 34px;\r\n    font-weight: bold;\r\n}\r\n.second{\r\n    z-index: 4;\r\n    position: absolute;\r\n    width: 80px;\r\n    height: 160px;\r\n    border-top-left-radius: 160px;\r\n    border-bottom-left-radius: 160px;\r\n    background-color: rgb(84, 84, 250);\r\n    animation: anim linear;\r\n    animation-duration: var(--animatime);\r\n    animation-iteration-count: 1;\r\n    opacity: 0;\r\n    transform-origin: 100% 50%;\r\n}\r\n.third{\r\n    z-index: 2;\r\n    position: absolute;\r\n    width: 80px;\r\n    height: 160px;\r\n    border-top-right-radius: 160px;\r\n    border-bottom-right-radius: 160px;\r\n    transform: translate(50%, 0);\r\n    background-color: rgb(84, 84, 250);\r\n    animation: anima linear;\r\n    animation-duration: var(--animatime);\r\n    animation-iteration-count: 1;\r\n    opacity: 0;\r\n}\r\n.fifth{\r\n    width: 145px;\r\n    height: 145px;\r\n    border-radius: 50%;\r\n    background-color: gray;\r\n    z-index: 5;\r\n    position: absolute;\r\n}\r\n@keyframes anima{\r\n    0%{\r\n        opacity: 1;\r\n    }\r\n    50%{\r\n        opacity: 1;\r\n    }\r\n    50.1%{\r\n        opacity: 0;\r\n    }\r\n    100%{\r\n        opacity: 0;\r\n    }\r\n\r\n}\r\n@keyframes anim{\r\n    0%{\r\n        transform:translate(-50%, 0) rotate(0deg);\r\n        z-index: 4;\r\n        opacity: 1;\r\n    }\r\n    50%{\r\n        transform:translate(-50%, 0) rotate(-180deg);\r\n        z-index: 4;\r\n        opacity: 1;\r\n    }\r\n    50.1%{\r\n        transform: translate(-50%, 0) rotate(-180deg);\r\n        z-index: 2;\r\n        opacity: 1;\r\n    }\r\n    100%{\r\n        transform:translate(-50%, 0) rotate(-360deg);\r\n        z-index: 2;\r\n        opacity: 1;\r\n    }\r\n}\r\n.fourth{\r\n    z-index: 3;\r\n    position: absolute;\r\n    width: 80px;\r\n    height: 160px;\r\n    border-top-left-radius: 160px;\r\n    border-bottom-left-radius: 160px;\r\n    transform: translate(-50%, 0);\r\n    background-color: gray;\r\n}\r\n.container{\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    margin: auto;\r\n    width: 160px;\r\n    height: 160px;\r\n}\r\n.speed{\r\n    margin-top: 100px;\r\n}\r\n*{\r\n    font-size: 20px;\r\n}\r\n.upcoming{\r\n    color: rgb(84, 84, 250);\r\n    position: relative;\r\n}\r\n.upcoming::after{\r\n    content: '';\r\n    position: absolute;\r\n    left: 50%;\r\n    bottom: 0;\r\n    transform: translateX(-50%);\r\n    width: 80%; \r\n    height: 2px; \r\n    background-color: rgb(84, 84, 250); \r\n    animation: animate 1s linear infinite;\r\n}\r\n@keyframes animate{\r\n    0%{\r\n        opacity: 1;\r\n    }\r\n    50%{\r\n        opacity: 0;\r\n    }\r\n    100%{\r\n        opacity: 1;\r\n    }\r\n}\r\n.every{\r\n    font-size: 30px;\r\n    display: inline-block;\r\n    line-height: 1;\r\n    vertical-align: middle;\r\n    position: relative;\r\n    text-align: center;\r\n    width: 20px;\r\n    margin-top: 3px;\r\n    margin-right: 0.8px;\r\n    border-radius: 13%;\r\n    height: 40px;\r\n}\r\n.default{\r\n    color: rgb(59, 59, 59);\r\n}\r\n.correct{\r\n    background-color: rgb(89, 255, 89);\r\n    color: green;\r\n}\r\n.incorrect{\r\n    color: rgb(236, 74, 74);\r\n    background-color: rgb(160, 69, 69);\r\n}\r\n.game{\r\n    width: 80%;\r\n    margin: auto;\r\n    background-color: rgb(208, 203, 203);\r\n    font-size: 30px;\r\n    position: relative;\r\n}\r\n.words{\r\n    filter: blur(4px);\r\n}\r\n.game:focus .game{\r\n    border: none;\r\n}\r\n.game:focus .words{\r\n    filter: blur(0px);\r\n}\r\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}