{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, withModifiers as _withModifiers, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, normalizeStyle as _normalizeStyle, vShow as _vShow, createStaticVNode as _createStaticVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-4cebd208\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"container1\"\n};\nconst _hoisted_2 = {\n  class: \"timedisplay\"\n};\nconst _hoisted_3 = {\n  class: \"hour\"\n};\nconst _hoisted_4 = {\n  class: \"wd\"\n};\nconst _hoisted_5 = {\n  class: \"shahar\"\n};\nconst _hoisted_6 = {\n  class: \"cnamedisplay\"\n};\nconst _hoisted_7 = /*#__PURE__*/_createStaticVNode(\"<datalist id=\\\"shahar\\\" data-v-4cebd208><option value=\\\"Tashkent\\\" data-v-4cebd208>Toshkent</option><option value=\\\"Buxoro\\\" data-v-4cebd208>Buxoro</option><option value=\\\"Samarqand\\\" data-v-4cebd208>Samarqand</option><option value=\\\"Navoiy\\\" data-v-4cebd208>Navoiy</option><option value=\\\"Namangan\\\" data-v-4cebd208>Namangan</option><option value=\\\"Andijon\\\" data-v-4cebd208>Andijon</option><option value=\\\"Farg&#39;ona\\\" data-v-4cebd208>Farg&#39;ona</option><option value=\\\"Kashkadaryo\\\" data-v-4cebd208>Kashkadaryo</option><option value=\\\"Sirdaryo\\\" data-v-4cebd208>Sirdaryo</option><option value=\\\"Jizzax\\\" data-v-4cebd208>Jizzax</option><option value=\\\"Nukus\\\" data-v-4cebd208>Nukus</option></datalist>\", 1);\nconst _hoisted_8 = {\n  id: \"btn\",\n  type: \"submit\"\n};\nconst _hoisted_9 = [\"src\"];\nconst _hoisted_10 = {\n  class: \"current\"\n};\nconst _hoisted_11 = {\n  class: \"hobhavo cont\"\n};\nconst _hoisted_12 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"p\", null, \"Ob-havo\", -1 /* HOISTED */));\nconst _hoisted_13 = [\"src\"];\nconst _hoisted_14 = {\n  class: \"namlik cont\"\n};\nconst _hoisted_15 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"p\", null, \"Temperatura\", -1 /* HOISTED */));\nconst _hoisted_16 = {\n  class: \"shamol cont\"\n};\nconst _hoisted_17 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"p\", null, \"Shamol tezligi\", -1 /* HOISTED */));\nconst _hoisted_18 = {\n  class: \"namlik cont\"\n};\nconst _hoisted_19 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"p\", null, \"Quyosh chiqishi\", -1 /* HOISTED */));\nconst _hoisted_20 = {\n  class: \"namlik cont\"\n};\nconst _hoisted_21 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"p\", null, \"Quyosh botishi\", -1 /* HOISTED */));\nconst _hoisted_22 = {\n  class: \"namlik cont\"\n};\nconst _hoisted_23 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"p\", null, \"Namlik\", -1 /* HOISTED */));\nconst _hoisted_24 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h1\", {\n  class: \"yana\"\n}, \"2 haftalik ob-havo\", -1 /* HOISTED */));\nconst _hoisted_25 = {\n  class: \"hourdata\"\n};\nconst _hoisted_26 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"tr\", null, [/*#__PURE__*/_createElementVNode(\"th\", null, \"Kun\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"Temperatura\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"Shamol tezligi\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"Tavsif\")], -1 /* HOISTED */));\nconst _hoisted_27 = {\n  class: \"double\"\n};\nconst _hoisted_28 = {\n  class: \"second\"\n};\nconst _hoisted_29 = [\"src\"];\nconst _hoisted_30 = {\n  class: \"oxirgi\"\n};\nconst _hoisted_31 = {\n  class: \"inputcontainer\"\n};\nconst _hoisted_32 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"p\", null, \"Soatlik ob-havoni olish uchun sananani kiriting:\", -1 /* HOISTED */));\nconst _hoisted_33 = [\"min\", \"max\"];\nconst _hoisted_34 = {\n  class: \"hourdata\"\n};\nconst _hoisted_35 = {\n  class: \"table2\"\n};\nconst _hoisted_36 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"tr\", null, [/*#__PURE__*/_createElementVNode(\"th\", null, \"Vaqt\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"Temperatura\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"Shamol tezligi\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"Tavsif\")], -1 /* HOISTED */));\nconst _hoisted_37 = [\"src\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createElementVNode(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"div\", _hoisted_3, _toDisplayString($data.hm), 1 /* TEXT */), _createElementVNode(\"div\", _hoisted_4, _toDisplayString($data.wd), 1 /* TEXT */), _createElementVNode(\"div\", _hoisted_5, _toDisplayString($data.data.capname), 1 /* TEXT */)]), _createElementVNode(\"div\", _hoisted_6, [_createElementVNode(\"form\", {\n    onSubmit: _cache[1] || (_cache[1] = _withModifiers((...args) => $options.getdata && $options.getdata(...args), [\"prevent\"]))\n  }, [_withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    list: \"shahar\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.cityname = $event)\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.cityname]]), _hoisted_7, _createElementVNode(\"button\", _hoisted_8, [_createElementVNode(\"img\", {\n    src: _ctx.imagepath,\n    alt: \"s\"\n  }, null, 8 /* PROPS */, _hoisted_9)])], 32 /* NEED_HYDRATION */), _createElementVNode(\"div\", _hoisted_10, [_createElementVNode(\"div\", _hoisted_11, [_hoisted_12, _createElementVNode(\"img\", {\n    src: $data.data.foricon,\n    alt: \"icon\"\n  }, null, 8 /* PROPS */, _hoisted_13)]), _createElementVNode(\"div\", _hoisted_14, [_hoisted_15, _createElementVNode(\"p\", null, _toDisplayString($data.data.currentw), 1 /* TEXT */)]), _createElementVNode(\"div\", _hoisted_16, [_hoisted_17, _createElementVNode(\"p\", null, _toDisplayString($data.data.windspeed), 1 /* TEXT */)]), _createElementVNode(\"div\", _hoisted_18, [_hoisted_19, _createElementVNode(\"p\", null, _toDisplayString($data.data.qchiq), 1 /* TEXT */)]), _createElementVNode(\"div\", _hoisted_20, [_hoisted_21, _createElementVNode(\"p\", null, _toDisplayString($data.data.qbot), 1 /* TEXT */)]), _createElementVNode(\"div\", _hoisted_22, [_hoisted_23, _createElementVNode(\"p\", null, _toDisplayString($data.data.humidity) + \"%\", 1 /* TEXT */)])])])]), _hoisted_24, _createElementVNode(\"div\", _hoisted_25, [_createElementVNode(\"table\", null, [_hoisted_26, (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.daily, dai => {\n    return _openBlock(), _createElementBlock(\"tr\", {\n      key: dai\n    }, [_createElementVNode(\"td\", _hoisted_27, [_createElementVNode(\"p\", null, _toDisplayString(dai.weekday), 1 /* TEXT */), _createElementVNode(\"p\", _hoisted_28, _toDisplayString(dai.tablesana), 1 /* TEXT */)]), _createElementVNode(\"td\", null, _toDisplayString(dai.wtemp), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(dai.wind), 1 /* TEXT */), _createElementVNode(\"td\", null, [_createElementVNode(\"img\", {\n      src: dai.wicon,\n      alt: \"icon\"\n    }, null, 8 /* PROPS */, _hoisted_29)])]);\n  }), 128 /* KEYED_FRAGMENT */))])]), _createElementVNode(\"div\", _hoisted_30, [_createElementVNode(\"h1\", {\n    class: \"itis\",\n    style: _normalizeStyle({\n      visibility: $data.tableshow ? 'visible' : 'hidden'\n    })\n  }, \"Sana: \" + _toDisplayString($data.yanasana), 5 /* TEXT, STYLE */), _createElementVNode(\"div\", _hoisted_31, [_hoisted_32, _createElementVNode(\"form\", null, [_withDirectives(_createElementVNode(\"input\", {\n    style: {\n      \"float\": \"right\"\n    },\n    id: \"hourdata\",\n    type: \"date\",\n    min: $data.mindate,\n    max: $data.maxdate,\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $data.hourlyweather = $event),\n    onInput: _cache[3] || (_cache[3] = (...args) => $options.gethour && $options.gethour(...args))\n  }, null, 40 /* PROPS, NEED_HYDRATION */, _hoisted_33), [[_vModelText, $data.hourlyweather]])])])]), _createElementVNode(\"div\", _hoisted_34, [_withDirectives(_createElementVNode(\"table\", _hoisted_35, [_hoisted_36, (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.hourl, hourlyw => {\n    return _openBlock(), _createElementBlock(\"tr\", {\n      key: hourlyw\n    }, [_createElementVNode(\"td\", null, _toDisplayString(hourlyw.hour), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(hourlyw.htemp), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(hourlyw.hspeed), 1 /* TEXT */), _createElementVNode(\"td\", null, [_createElementVNode(\"img\", {\n      src: hourlyw.hicon,\n      alt: \"icon\"\n    }, null, 8 /* PROPS */, _hoisted_37)])]);\n  }), 128 /* KEYED_FRAGMENT */))], 512 /* NEED_PATCH */), [[_vShow, $data.tableshow]])])], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["class","_createStaticVNode","id","type","_createElementVNode","_createElementBlock","_Fragment","_hoisted_1","_hoisted_2","_hoisted_3","_toDisplayString","$data","hm","_hoisted_4","wd","_hoisted_5","data","capname","_hoisted_6","onSubmit","_cache","_withModifiers","args","$options","getdata","list","$event","cityname","_hoisted_7","_hoisted_8","src","_ctx","imagepath","alt","_hoisted_9","_hoisted_10","_hoisted_11","_hoisted_12","foricon","_hoisted_13","_hoisted_14","_hoisted_15","currentw","_hoisted_16","_hoisted_17","windspeed","_hoisted_18","_hoisted_19","qchiq","_hoisted_20","_hoisted_21","qbot","_hoisted_22","_hoisted_23","humidity","_hoisted_24","_hoisted_25","_hoisted_26","_renderList","daily","dai","key","_hoisted_27","weekday","_hoisted_28","tablesana","wtemp","wind","wicon","_hoisted_29","_hoisted_30","style","_normalizeStyle","visibility","tableshow","yanasana","_hoisted_31","_hoisted_32","min","mindate","max","maxdate","hourlyweather","onInput","gethour","_hoisted_33","_hoisted_34","_hoisted_35","_hoisted_36","hourl","hourlyw","hour","htemp","hspeed","hicon","_hoisted_37"],"sources":["C:\\Users\\Windows 11\\All\\real\\vuejob\\src\\views\\AboutView.vue"],"sourcesContent":["<template>\n  <div class=\"container1\">\n    <div class=\"timedisplay\">\n      <div class=\"hour\">{{ hm }}</div>\n      <div class=\"wd\">{{ wd }}</div>\n      <div class=\"shahar\">{{ data.capname }}</div>\n    </div>\n    <div class=\"cnamedisplay\">\n      <form v-on:submit.prevent=\"getdata\">\n        <input type=\"text\" list=\"shahar\" v-model=\"cityname\">\n        <datalist id=\"shahar\">\n          <option value=\"Tashkent\">Toshkent</option>\n          <option value=\"Buxoro\">Buxoro</option>\n          <option value=\"Samarqand\">Samarqand</option>\n          <option value=\"Navoiy\">Navoiy</option>\n          <option value=\"Namangan\">Namangan</option>\n          <option value=\"Andijon\">Andijon</option>\n          <option value=\"Farg'ona\">Farg'ona</option>\n          <option value=\"Kashkadaryo\">Kashkadaryo</option>\n          <option value=\"Sirdaryo\">Sirdaryo</option>\n          <option value=\"Jizzax\">Jizzax</option>\n          <option value=\"Nukus\">Nukus</option>\n        </datalist>\n        <button id=\"btn\" type=\"submit\"><img :src=\"imagepath\" alt=\"s\"></button>\n      </form>\n      <div class=\"current\">\n        <div class=\"hobhavo cont\">\n          <p>Ob-havo</p>\n          <img :src=\"data.foricon\" alt=\"icon\">\n        </div>\n        <div class=\"namlik cont\">\n          <p>Temperatura</p>\n          <p>{{ data.currentw }}</p>\n        </div>\n        \n        <div class=\"shamol cont\">\n          <p>Shamol tezligi</p>\n          <p>{{ data.windspeed }}</p>\n        </div>\n        <div class=\"namlik cont\">\n          <p>Quyosh chiqishi</p>\n          <p>{{ data.qchiq }}</p>\n        </div>\n        <div class=\"namlik cont\">\n          <p>Quyosh botishi</p>\n          <p>{{ data.qbot }}</p>\n        </div>\n        <div class=\"namlik cont\">\n          <p>Namlik</p>\n          <p>{{ data.humidity }}%</p>\n        </div>\n      </div>\n      \n    </div>\n  </div>\n  <h1 class=\"yana\">2 haftalik ob-havo</h1>\n  <div class=\"hourdata\">\n    <table>\n      <tr>\n        <th>Kun</th>\n        <th>Temperatura</th>\n        <th>Shamol tezligi</th>\n        <th>Tavsif</th>\n      </tr>\n      <tr v-for=\"dai in daily\" :key=\"dai\">\n        <td class=\"double\"><p>{{ dai.weekday }} </p><p class=\"second\">{{ dai.tablesana }}</p></td>\n        <td>{{ dai.wtemp }}</td>\n        <td>{{ dai.wind }}</td>\n        <td><img :src=\"dai.wicon\" alt=\"icon\"></td>\n      </tr>\n    </table>\n  </div>\n  <div class=\"oxirgi\">\n    <h1 class=\"itis\" :style=\"{ visibility: tableshow ? 'visible' : 'hidden' }\">Sana: {{ yanasana }}</h1>\n    <div class=\"inputcontainer\">\n      <p>Soatlik ob-havoni olish uchun sananani kiriting:</p>\n      <form>\n        <input style=\"float: right;\" id=\"hourdata\" type=\"date\" :min=\"mindate\" :max=\"maxdate\" v-model=\"hourlyweather\" @input=\"gethour\">\n      </form>\n    </div>\n    \n  </div>    \n    \n  <div class=\"hourdata\">\n    <table class=\"table2\" v-show=\"tableshow\">\n      <tr>\n        <th>Vaqt</th>\n        <th>Temperatura</th>\n        <th>Shamol tezligi</th>\n        <th>Tavsif</th>\n      </tr>\n      <tr v-for=\"hourlyw in hourl\" :key=\"hourlyw\">\n        <td >{{ hourlyw.hour }}</td>\n        <td>{{ hourlyw.htemp }}</td>\n        <td>{{ hourlyw.hspeed }}</td>\n        <td><img :src=\"hourlyw.hicon\" alt=\"icon\"></td>\n      </tr>\n    </table>\n  </div>\n    \n  \n</template>\n\n\n<script >\n\nexport default{\n\n  data(){\n    return{\n      windowWidth: window.innerWidth,\n      windowHeight: window.innerHeight,\n      // imagepath: require('./assets/search.png'),\n      // tun: require('./assets/cloudy.png'),\n      // cloudy: require('./assets/cloudy.png'),\n      // sun: require('./assets/cloudy.png'),\n      // rain: require('./assets/cloudy.png'),\n      // snow: require('./assets/cloudy.png'),\n      // thunder: require('./assets/cloudy.png'),\n      // day: require('./assets/cloudy.png'),\n      // night: require('./assets/cloudy.png'),\n      // nightcloudy: require('./assets/cloudy.png'),\n      // nightsnow: require('./assets/cloudy.png'),\n      // nightrain: require('./assets/cloudy.png'),\n      cityname: \"\",\n      defaultcityname:  \"Tashkent\",\n      forhourdata: [],\n      data: [],\n      daily: [],\n      hourl: [],\n      city: \"\",\n      hm: \"\",\n      wd: \"\",\n      mindate: \"\",\n      maxdate: \"\",\n      hourlyweather: \"\",\n      tableshow: false,\n      yanasana: \"\",\n    }\n  },\n  mounted(){\n    this.getdata()\n  },\n\n  methods: {\n\n    selsiy(temp){\n      let seltemp=(Math.floor((temp-32)*5)/9).toFixed(1);\n      return `${seltemp} °C`;\n\n    },\n    gethour(){\n      this.yanasana=this.monthdate(this.hourlyweather)\n      this.tableshow=true;\n      let index;\n      for(let i=1;i<=14;i++){\n        if(this.forhourdata[i].datetime==this.hourlyweather){\n          index=i;\n        }\n      }\n      this.hourl=[];\n        for(let i=1; i<24;i+=3){\n          let iconify;\n          if(this.forhourdata[index].hours[i].datetime>this.forhourdata[index].sunrise && this.forhourdata[index].hours[i].datetime<this.forhourdata[index].sunset){\n            iconify=this.geticon(this.forhourdata[index].hours[i].icon);\n          }\n          else{\n            iconify=this.getnighticon(this.forhourdata[index].hours[i].icon)\n          }\n          let htemperatura=this.selsiy(this.forhourdata[index].hours[i].temp)\n          let aobject={\n              hour: this.forhourdata[index].hours[i].datetime.slice(0,-3),\n              htemp: htemperatura,\n              hspeed: this.forhourdata[index].hours[i].windspeed,\n              hicon: iconify\n          }\n          this.hourl.push(aobject)\n      }\n    },\n    monthdate(dat){\n      let sliceddate=dat.split('-');\n      let numofoy= sliceddate[1];\n      const oylar= {\n        '01':'Yanvar',\n        '02':'Fevral',\n        '03':'Mart',\n        '04':'Aprel',\n        '05':'May',\n        '06':'Iyun',\n        '07':'Iyul',\n        '08':'Avgust',\n        '09':'Sentabr',\n        '10':'Oktabr',\n        '11':'Noyabr',\n        '12':'Dekabr',\n      }\n      let uzbsana=sliceddate[2];\n      if(uzbsana.charAt(0)=='0'){\n        uzbsana= uzbsana.substring(1)\n      }\n\n      const oy=oylar[numofoy]\n      const sana= `${uzbsana}-${oy}`\n      return sana;\n     \n    },\n    getnighticon(nighticons){\n      let nighticonify=nighticons;\n\n      if(nighticonify.includes('clear')){\n      nighticonify= this.night;\n      }\n      else if(nighticonify.includes('rain')){\n        nighticonify= this.nightrain;\n      }\n      else if(nighticonify.includes('snow')){\n        nighticonify=this.nightsnow;\n      }\n      else{\n        nighticonify = this.nightcloudy\n      }\n      return nighticonify;\n\n    },\n    geticon(icons){\n      let iconify=icons;\n\n      if(iconify.includes('clear')){\n      iconify= this.sun;\n      }\n      else if(iconify=='rain'){\n        iconify= this.rain;\n      }\n      else if(iconify.includes('thunderstorm')){\n        iconify=this.thunder;\n      }\n      else{\n        iconify = this.cloudy\n      }\n      return iconify;\n\n    },\n    hkuns(enday){\n\n    const haftakunlar = {\n        'Mon': 'Dushanba',\n        'Tue': 'Seshanba',\n        'Wed': 'Chorshanba',\n        'Thu': 'Payshanba',\n        'Fri': 'Juma',\n        'Sat': 'Shanba',\n        'Sun': 'Yakshanba'\n      };\n      return haftakunlar[enday]\n    },\n\n    getTime(timezone) {\n        if (timezone) {\n          const now = DateTime.now().setZone(timezone);\n          const dateFormatted = now.toFormat(\"d-LLLL\"); \n          const dayofweek = now.toFormat(\"EEE\")\n          const timeFormatted = now.toFormat(\"HH:mm\"); \n          const hkun = this.hkuns(dayofweek)\n          this.hm = `${timeFormatted}`;\n          this.wd = `${hkun}, ${dateFormatted}`\n        } \n        else {\n          this.time = \"Unknown city or timezone\";\n        }\n      },\n\n\n    dweather(data) {\n      this.mindate= data.days[1].datetime;\n      this.maxdate = data.days[14].datetime;\n      this.forhourdata= data.days;\n      this.daily=[];\n      for (let i = 1; i <= 14; i++) {\n        let hkun;\n        let iconify= this.geticon(data.days[i].icon)\n        const datetime = data.days[i].datetime;\n        const date = new Date(datetime);\n        const options = { weekday: 'long', locale: 'uz' };\n        const dayOfWeek = date.toLocaleDateString('uz-UZ', options);\n        if(i==1){\n          hkun=\"Ertaga\";\n        }\n        else{\n          hkun=this.hkuns(dayOfWeek)\n        }\n        const sa=this.monthdate(data.days[i].datetime)\n        let dtemp=this.selsiy(data.days[i].temp)\n\n        let dinf = {\n          wtemp: dtemp,\n          wicon: iconify,\n          weekday: hkun,\n          tablesana: sa,\n          wind: data.days[i].windspeed,\n\n        }\n        this.daily.push(dinf)\n      }\n    },\n    async getdata() {\n      try {\n        let cname=\"\"\n        if(this.cityname==\"\"){\n          cname=\"Tashkent\"\n        }\n        else{\n          cname=this.cityname;\n        }\n        \n        const response = await fetch(`https://weather.visualcrossing.com/VisualCrossingWebServices/rest/services/timeline/${cname}?unitGroup=us&key=S8GRPS82BJYVQWBERVPLSHJRA&contentType=json`)\n        const data = await response.json();\n        \n        let iconify = this.geticon(data.currentConditions.icon);\n\n        const timeString = data.currentConditions.sunrise;\n        const [hours, minutes] = timeString.split(\":\");\n        const qchiqv= `${hours}:${minutes}`;\n\n        const another = data.currentConditions.sunset;\n        const [hou, minu] = another.split(\":\");\n        const qbotv = `${hou}:${minu}`\n        this.forhourdata=data;\n        let selsiytemp=this.selsiy(data.currentConditions.temp);\n        let inf = {\n          \n          currentw: selsiytemp, \n          capname: data.resolvedAddress,\n          windspeed: data.currentConditions.windspeed,\n          foricon: iconify,\n          qchiq: qchiqv,\n          qbot: qbotv,\n          humidity: data.currentConditions.humidity,\n\n        }\n        this.getTime(data.timezone);\n        setInterval(()=>{\n          this.getTime(data.timezone)\n          },30000)\n        \n        this.dweather(data)\n        this.data = inf;\n      } catch (error) {\n        console.error(\"City name is not found\");\n      }\n    }\n  }\n}\n</script>\n\n<style scoped>\n\n.hour{\n    font-size: 50px;\n    font-weight: 900;\n}\n.wd{\n    font-size: 28px;\n    font-weight: 700;\n}\n.shahar{\n    font-size: 24px;\n    font-weight: 600;\n}\ninput:focus{\n    outline: none;\n}\ninput{\n    outline: none;\n    border: none;\n    padding-left: 12px;\n    width: 260px;\n    height: 30px;\n    font-size: 25px;\n    background: rgba(148, 145, 145, 0.7);\n    border-radius: 12px;\n}\n\n.container1{\n    width: 86%;\n    margin: auto;\n    height: auto;\n    display: flex;\n    justify-content: space-between;\n    flex-wrap: wrap;\n    margin: 0 auto 8%;\n}\n#btn{\n    border: none;\n    background: transparent;\n    margin-left: 3px;\n    transform: translateY(12%);\n    padding:5px 18px 0;\n    border-radius: 12px;\n    background-color: rgba(121, 117, 117, 0.7);\n}\n#btn> img{\n    width: 25px;\n}\n.cont{\n    display: flex;\n    width: 100%;\n    height: 20px;\n    justify-content: space-between;\n    align-items: center;\n}\n.cont p{\n    display: inline;\n    font-size: 16px;\n}\n.current{\n    width: 80%;\n    padding: 15px;\n    margin-top: 20px;\n    background-color: rgba(148, 145, 145, 0.7);\n    border-radius: 20px;\n}\n.cnamedisplay, .timedisplay{\n    margin-top: 8%;\n}\n.timedisplay{\n    width: 300px;\n    padding: 20px;\n    height: 160px;\n    border-radius: 15px;\n}\nimg{\n    width: 40px;\n}\n\ntable{\n    border-collapse: collapse;\n    width: 100%;\n    background-color: rgba(148, 145, 145, 0.7);\n}\ntable, th, td{\n    \n    border: 2px solid black;\n}\nth{\n    height: 50px;\n}\ntd{\n    text-align: center;\n    width: 3%;\n}\n.second{\n    transform: translateY(-100%);\n    font-size: .7em;\n    font-weight: 500;\n}\n.oxirgi{\n    width: 86%;\n    margin: auto;\n    display: flex;\n    flex-wrap: wrap;\n    height: auto;\n    margin: 40px auto;\n    align-items: center;\n    justify-content: space-between;\n}\n.inputcontainer{\n    order: 2;\n    width: 50%;\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    flex-wrap: wrap;\n}\n.itis{\n    width: 30%;\n    order: 1;\n}\n.hourdata{\n    width: 86%;\n    margin: auto;\n}\n.yana{\n    text-align: center;\n}\n@media(max-width: 805px){\n  .container1{\n    justify-content: center;\n  }\n}\n@media(max-width: 1090px){\n  .inputcontainer{\n    order: 1;\n    width: 100%;\n  }\n  .itis{\n    order: 2;\n    width: 100%;\n    text-align: center;\n    transform: translateY(-10%)\n  }\n}\n\n\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}