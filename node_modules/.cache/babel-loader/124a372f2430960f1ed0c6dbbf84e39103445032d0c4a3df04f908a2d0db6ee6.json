{"ast":null,"code":"import { vModelText as _vModelText, createElementVNode as _createElementVNode, withDirectives as _withDirectives, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(_Fragment, null, [_withDirectives(_createElementVNode(\"textarea\", {\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.intext = $event),\n    name: \"programming\",\n    id: \"program\",\n    onInput: _cache[1] || (_cache[1] = (...args) => _ctx.check && _ctx.check(...args))\n  }, null, 544 /* NEED_HYDRATION, NEED_PATCH */), [[_vModelText, $data.intext]]), _createElementVNode(\"pre\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.mytext, (letter, index) => {\n    return _openBlock(), _createElementBlock(\"span\", {\n      key: index\n    }, _toDisplayString(letter), 1 /* TEXT */);\n  }), 128 /* KEYED_FRAGMENT */))]), _createElementVNode(\"pre\", null, _toDisplayString($data.intext), 1 /* TEXT */)], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["_createElementBlock","_Fragment","_createElementVNode","_cache","$event","$data","intext","name","id","onInput","args","_ctx","check","_renderList","mytext","letter","index","key","_toDisplayString"],"sources":["C:\\Users\\Windows 11\\All\\real\\vuejob\\src\\views\\new.vue"],"sourcesContent":["<template>\r\n    <textarea v-model=\"intext\" name=\"programming\" id=\"program\" @input=\"check\"></textarea>\r\n    <pre><span v-for=\"(letter, index) in mytext\" :key=\"index\">{{ letter }}</span></pre>\r\n    <pre>{{ intext }}</pre>\r\n</template> \r\n<script>\r\nimport * as CodeMirror from 'codemirror';\r\nimport 'codemirror/lib/codemirror.css';\r\nimport 'codemirror/theme/dracula.css';\r\nimport 'codemirror/mode/javascript/javascript.js';\r\nimport 'codemirror/mode/gfm/gfm.js';\r\nimport 'codemirror/addon/edit/closebrackets.js';\r\nimport 'codemirror/addon/edit/matchbrackets.js';\r\nimport {coding} from '../mytextes/codetext.js';\r\nexport default{\r\n    data(){\r\n        return{\r\n            myshow: false,\r\n            intext: \"\",\r\n            mytext : coding[1],\r\n        }\r\n    },\r\n    mounted() {\r\n        this.editor = CodeMirror.fromTextArea(document.getElementById(\"program\"), {\r\n            lineNumbers: true,\r\n            theme: 'dracula',\r\n            mode: 'javascript',\r\n            autoCloseBrackets: true,\r\n            matchBrackets: true,\r\n        });\r\n        this.editor.setValue(this.intext);\r\n        this.editor.on('change', () => {\r\n            this.intext = this.editor.getValue();\r\n        });\r\n    },\r\n    methods:{\r\n    }\r\n}\r\n</script>\r\n<style scoped>\r\n\r\n</style>"],"mappings":";;uBAAAA,mBAAA,CAAAC,SAAA,S,gBACIC,mBAAA,CAAqF;IADzF,uBAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IACuBC,KAAA,CAAAC,MAAM,GAAAF,MAAA;IAAEG,IAAI,EAAC,aAAa;IAACC,EAAE,EAAC,SAAS;IAAEC,OAAK,EAAAN,MAAA,QAAAA,MAAA,UAAAO,IAAA,KAAEC,IAAA,CAAAC,KAAA,IAAAD,IAAA,CAAAC,KAAA,IAAAF,IAAA,CAAK;iEAArDL,KAAA,CAAAC,MAAM,E,GACzBJ,mBAAA,CAAmF,e,kBAA9EF,mBAAA,CAAwEC,SAAA,QAFjFY,WAAA,CAEyCR,KAAA,CAAAS,MAAM,EAF/C,CAEuBC,MAAM,EAAEC,KAAK;yBAA3BhB,mBAAA,CAAwE;MAA/BiB,GAAG,EAAED;IAAK,GAAAE,gBAAA,CAAKH,MAAM;oCACnEb,mBAAA,CAAuB,aAAAgB,gBAAA,CAAfb,KAAA,CAAAC,MAAM,iB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}